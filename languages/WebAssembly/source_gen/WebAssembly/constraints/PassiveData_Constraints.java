package WebAssembly.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class PassiveData_Constraints extends BaseConstraintsDescriptor {
  public PassiveData_Constraints() {
    super(CONCEPTS.PassiveData$s0);
  }

  public static class B_Property extends BasePropertyConstraintsDescriptor {
    public B_Property(ConstraintsDescriptor container) {
      super(PROPS.b$MYIY, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castString(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:8d1bde9d-a4dd-40f6-85b6-a5a7d02899c3(WebAssembly.constraints)", "4172580935746471042"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, String propertyValue) {
      return propertyValue.length() % 2 == 0;
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.b$MYIY, new B_Property(this));
    return properties;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept PassiveData$s0 = MetaAdapterFactory.getConcept(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x39e7fc40f7bb0b70L, "WebAssembly.structure.PassiveData");
  }

  private static final class PROPS {
    /*package*/ static final SProperty b$MYIY = MetaAdapterFactory.getProperty(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x39e7fc40f7bb0b70L, 0x39e7fc40f7bb0b72L, "b");
  }
}
