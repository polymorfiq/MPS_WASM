package WebAssembly.binaryGen;

/*Generated by MPS */

import BinaryGen.runtime.runtime.BinaryGenerator;
import org.jetbrains.mps.openapi.model.SNode;
import java.io.DataOutputStream;
import java.io.IOException;
import jetbrains.mps.internal.collections.runtime.ArrayUtils;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import WebAssembly.behavior.ByteSized__BehaviorDescriptor;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class Module_BinaryGen extends BinaryGenerator<SNode> {
  @Override
  public void generate(SNode node, DataOutputStream stream) throws IOException {
    stream.write(new byte[]{(byte) 0, (byte) 97, (byte) 115, (byte) 109});
    stream.write(new byte[]{(byte) 1, (byte) 0, (byte) 0, (byte) 0});
    stream.write(ArrayUtils.toByteArray(Sequence.fromIterable(bytesFieldValue_wq6h8e_c(node))));
  }

  @Override
  public String filePath(SNode node) {
    return SModelOperations.getModelName(SNodeOperations.getModel(node)).replaceAll("\\.", "/");
  }

  @Override
  public String fileName(SNode node) {
    return BaseConcept__BehaviorDescriptor.getPresentation_idhEwIMiw.invoke(node).replaceAll("[^-_\\. \\w]", "");
  }

  @Override
  public String extension(SNode node) {
    return "wasm";
  }
  private final Iterable<Byte> bytesFieldValue_wq6h8e_c(SNode node_wq6h8e_c) {
    final Wrappers._int size = new Wrappers._int(0);
    ListSequence.fromList(SLinkOperations.getChildren(node_wq6h8e_c, LINKS.sections$6WTp)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode section) {
        size.value += (int) ByteSized__BehaviorDescriptor.byte_size_id60rZZzHEXgh.invoke(section);
      }
    });

    final byte[] data = new byte[size.value];
    final Wrappers._int i = new Wrappers._int(0);
    ListSequence.fromList(SLinkOperations.getChildren(node_wq6h8e_c, LINKS.sections$6WTp)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode sect) {
        byte[] sectBytes = ByteSized__BehaviorDescriptor.bytes_id60rZZzHEXiv.invoke(sect);
        System.arraycopy(sectBytes, 0, data, i.value, sectBytes.length);
        i.value += sectBytes.length;
      }
    });

    return ArrayUtils.fromByteArray(data);
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink sections$6WTp = MetaAdapterFactory.getContainmentLink(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed5920a4L, 0x601bfff8ed886ae7L, "sections");
  }
}
