package WebAssembly.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_Mutability extends EnumerationDescriptorBase {

  public EnumerationDescriptor_Mutability() {
    super(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed82944bL, "Mutability", "r:7f03fe05-6980-4670-bfaf-c0d58cc0289a(WebAssembly.structure)/6925410296613999691");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_const_0 = new EnumerationDescriptor.MemberDescriptor("const", "const", 0x601bfff8ed82944cL, "r:7f03fe05-6980-4670-bfaf-c0d58cc0289a(WebAssembly.structure)/6925410296613999692");
  private final EnumerationDescriptor.MemberDescriptor myMember_var_0 = new EnumerationDescriptor.MemberDescriptor("var", "var", 0x601bfff8ed82944fL, "r:7f03fe05-6980-4670-bfaf-c0d58cc0289a(WebAssembly.structure)/6925410296613999695");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xf0ceec7784bd4104L, 0xb53284a17dffbb8aL, 0x601bfff8ed82944bL, 0x601bfff8ed82944cL, 0x601bfff8ed82944fL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_const_0, myMember_var_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "const":
        return myMember_const_0;
      case "var":
        return myMember_var_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
