package WebAssembly.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_ActiveData;
  private ConceptPresentation props_ActiveElem;
  private ConceptPresentation props_ActiveExplicitElem;
  private ConceptPresentation props_ActiveExplicitExprsElem;
  private ConceptPresentation props_ActiveExprsElem;
  private ConceptPresentation props_ActiveIndexedData;
  private ConceptPresentation props_Block;
  private ConceptPresentation props_BlockType;
  private ConceptPresentation props_Br;
  private ConceptPresentation props_BrIf;
  private ConceptPresentation props_BrTable;
  private ConceptPresentation props_ByteSized;
  private ConceptPresentation props_Call;
  private ConceptPresentation props_CallIndirect;
  private ConceptPresentation props_Code;
  private ConceptPresentation props_CodeSection;
  private ConceptPresentation props_CustomSection;
  private ConceptPresentation props_Data;
  private ConceptPresentation props_DataCountSection;
  private ConceptPresentation props_DataDrop;
  private ConceptPresentation props_DataIdx;
  private ConceptPresentation props_DataSection;
  private ConceptPresentation props_DeclarativeElem;
  private ConceptPresentation props_DeclarativeExprsElem;
  private ConceptPresentation props_Drop;
  private ConceptPresentation props_Elem;
  private ConceptPresentation props_ElemActiveExpr;
  private ConceptPresentation props_ElemDrop;
  private ConceptPresentation props_ElemIdx;
  private ConceptPresentation props_ElemSection;
  private ConceptPresentation props_EmptyBlockType;
  private ConceptPresentation props_EmptyInstruction;
  private ConceptPresentation props_Export;
  private ConceptPresentation props_ExportDesc;
  private ConceptPresentation props_ExportSection;
  private ConceptPresentation props_Expr;
  private ConceptPresentation props_F32Abs;
  private ConceptPresentation props_F32Add;
  private ConceptPresentation props_F32Ceil;
  private ConceptPresentation props_F32Const;
  private ConceptPresentation props_F32ConvertI32S;
  private ConceptPresentation props_F32ConvertI32U;
  private ConceptPresentation props_F32ConvertI64S;
  private ConceptPresentation props_F32ConvertI64U;
  private ConceptPresentation props_F32Copysign;
  private ConceptPresentation props_F32DemoteF64;
  private ConceptPresentation props_F32Div;
  private ConceptPresentation props_F32Eq;
  private ConceptPresentation props_F32Floor;
  private ConceptPresentation props_F32Ge;
  private ConceptPresentation props_F32Gt;
  private ConceptPresentation props_F32Le;
  private ConceptPresentation props_F32Load;
  private ConceptPresentation props_F32Lt;
  private ConceptPresentation props_F32Max;
  private ConceptPresentation props_F32Min;
  private ConceptPresentation props_F32Mul;
  private ConceptPresentation props_F32Ne;
  private ConceptPresentation props_F32Nearest;
  private ConceptPresentation props_F32Neg;
  private ConceptPresentation props_F32ReinterpretI32;
  private ConceptPresentation props_F32Sqrt;
  private ConceptPresentation props_F32Store;
  private ConceptPresentation props_F32Sub;
  private ConceptPresentation props_F32Trunc;
  private ConceptPresentation props_F32x4Abs;
  private ConceptPresentation props_F32x4Add;
  private ConceptPresentation props_F32x4Ceil;
  private ConceptPresentation props_F32x4ConvertI32x4S;
  private ConceptPresentation props_F32x4ConvertI32x4U;
  private ConceptPresentation props_F32x4DemoteF64x2Zero;
  private ConceptPresentation props_F32x4Div;
  private ConceptPresentation props_F32x4Eq;
  private ConceptPresentation props_F32x4ExtractLane;
  private ConceptPresentation props_F32x4Floor;
  private ConceptPresentation props_F32x4Ge;
  private ConceptPresentation props_F32x4Gt;
  private ConceptPresentation props_F32x4Le;
  private ConceptPresentation props_F32x4Lt;
  private ConceptPresentation props_F32x4Max;
  private ConceptPresentation props_F32x4Min;
  private ConceptPresentation props_F32x4Mul;
  private ConceptPresentation props_F32x4Ne;
  private ConceptPresentation props_F32x4Nearest;
  private ConceptPresentation props_F32x4Neg;
  private ConceptPresentation props_F32x4Pmax;
  private ConceptPresentation props_F32x4Pmin;
  private ConceptPresentation props_F32x4ReplaceLane;
  private ConceptPresentation props_F32x4Splat;
  private ConceptPresentation props_F32x4Sqrt;
  private ConceptPresentation props_F32x4Sub;
  private ConceptPresentation props_F32x4Trunc;
  private ConceptPresentation props_F64Abs;
  private ConceptPresentation props_F64Add;
  private ConceptPresentation props_F64Ceil;
  private ConceptPresentation props_F64Const;
  private ConceptPresentation props_F64ConvertI32S;
  private ConceptPresentation props_F64ConvertI32U;
  private ConceptPresentation props_F64ConvertI64S;
  private ConceptPresentation props_F64ConvertI64U;
  private ConceptPresentation props_F64Copysign;
  private ConceptPresentation props_F64Div;
  private ConceptPresentation props_F64Eq;
  private ConceptPresentation props_F64Floor;
  private ConceptPresentation props_F64Ge;
  private ConceptPresentation props_F64Gt;
  private ConceptPresentation props_F64Le;
  private ConceptPresentation props_F64Load;
  private ConceptPresentation props_F64Lt;
  private ConceptPresentation props_F64Max;
  private ConceptPresentation props_F64Min;
  private ConceptPresentation props_F64Mul;
  private ConceptPresentation props_F64Ne;
  private ConceptPresentation props_F64Nearest;
  private ConceptPresentation props_F64Neg;
  private ConceptPresentation props_F64PromoteF32;
  private ConceptPresentation props_F64ReinterpretI64;
  private ConceptPresentation props_F64Sqrt;
  private ConceptPresentation props_F64Store;
  private ConceptPresentation props_F64Sub;
  private ConceptPresentation props_F64Trunc;
  private ConceptPresentation props_F64x2Abs;
  private ConceptPresentation props_F64x2Add;
  private ConceptPresentation props_F64x2Ceil;
  private ConceptPresentation props_F64x2ConvertLowI32x4S;
  private ConceptPresentation props_F64x2ConvertLowI32x4U;
  private ConceptPresentation props_F64x2Div;
  private ConceptPresentation props_F64x2Eq;
  private ConceptPresentation props_F64x2ExtractLane;
  private ConceptPresentation props_F64x2Floor;
  private ConceptPresentation props_F64x2Ge;
  private ConceptPresentation props_F64x2Gt;
  private ConceptPresentation props_F64x2Le;
  private ConceptPresentation props_F64x2Lt;
  private ConceptPresentation props_F64x2Max;
  private ConceptPresentation props_F64x2Min;
  private ConceptPresentation props_F64x2Mul;
  private ConceptPresentation props_F64x2Ne;
  private ConceptPresentation props_F64x2Nearest;
  private ConceptPresentation props_F64x2Neg;
  private ConceptPresentation props_F64x2Pmax;
  private ConceptPresentation props_F64x2Pmin;
  private ConceptPresentation props_F64x2PromoteLowF32x4;
  private ConceptPresentation props_F64x2ReplaceLane;
  private ConceptPresentation props_F64x2Splat;
  private ConceptPresentation props_F64x2Sqrt;
  private ConceptPresentation props_F64x2Sub;
  private ConceptPresentation props_F64x2Trunc;
  private ConceptPresentation props_Func;
  private ConceptPresentation props_FuncExport;
  private ConceptPresentation props_FuncIdx;
  private ConceptPresentation props_FuncSection;
  private ConceptPresentation props_FuncType;
  private ConceptPresentation props_Global;
  private ConceptPresentation props_GlobalExport;
  private ConceptPresentation props_GlobalGet;
  private ConceptPresentation props_GlobalIdx;
  private ConceptPresentation props_GlobalSection;
  private ConceptPresentation props_GlobalSet;
  private ConceptPresentation props_GlobalType;
  private ConceptPresentation props_I16x8Abs;
  private ConceptPresentation props_I16x8Add;
  private ConceptPresentation props_I16x8AddSatS;
  private ConceptPresentation props_I16x8AddSatU;
  private ConceptPresentation props_I16x8AllTrue;
  private ConceptPresentation props_I16x8AvgrU;
  private ConceptPresentation props_I16x8Bitmask;
  private ConceptPresentation props_I16x8Eq;
  private ConceptPresentation props_I16x8ExtaddPairwiseI8x16S;
  private ConceptPresentation props_I16x8ExtaddPairwiseI8x16U;
  private ConceptPresentation props_I16x8ExtendHighI8x16S;
  private ConceptPresentation props_I16x8ExtendHighI8x16U;
  private ConceptPresentation props_I16x8ExtendLowI8x16S;
  private ConceptPresentation props_I16x8ExtendLowI8x16U;
  private ConceptPresentation props_I16x8ExtmulHighI8x16S;
  private ConceptPresentation props_I16x8ExtmulHighI8x16U;
  private ConceptPresentation props_I16x8ExtmulLowI8x16S;
  private ConceptPresentation props_I16x8ExtmulLowI8x16U;
  private ConceptPresentation props_I16x8ExtractLaneS;
  private ConceptPresentation props_I16x8ExtractLaneU;
  private ConceptPresentation props_I16x8GeS;
  private ConceptPresentation props_I16x8GeU;
  private ConceptPresentation props_I16x8GtS;
  private ConceptPresentation props_I16x8GtU;
  private ConceptPresentation props_I16x8LeS;
  private ConceptPresentation props_I16x8LeU;
  private ConceptPresentation props_I16x8LtS;
  private ConceptPresentation props_I16x8LtU;
  private ConceptPresentation props_I16x8MaxS;
  private ConceptPresentation props_I16x8MaxU;
  private ConceptPresentation props_I16x8MinS;
  private ConceptPresentation props_I16x8MinU;
  private ConceptPresentation props_I16x8Mul;
  private ConceptPresentation props_I16x8NarrowI32x4S;
  private ConceptPresentation props_I16x8NarrowI32x4U;
  private ConceptPresentation props_I16x8Ne;
  private ConceptPresentation props_I16x8Neg;
  private ConceptPresentation props_I16x8Q15mulrSatS;
  private ConceptPresentation props_I16x8ReplaceLane;
  private ConceptPresentation props_I16x8Shl;
  private ConceptPresentation props_I16x8ShrS;
  private ConceptPresentation props_I16x8ShrU;
  private ConceptPresentation props_I16x8Splat;
  private ConceptPresentation props_I16x8Sub;
  private ConceptPresentation props_I16x8SubSatS;
  private ConceptPresentation props_I16x8SubSatU;
  private ConceptPresentation props_I32Add;
  private ConceptPresentation props_I32And;
  private ConceptPresentation props_I32Clz;
  private ConceptPresentation props_I32Const;
  private ConceptPresentation props_I32Ctz;
  private ConceptPresentation props_I32DivS;
  private ConceptPresentation props_I32DivU;
  private ConceptPresentation props_I32Eq;
  private ConceptPresentation props_I32Eqz;
  private ConceptPresentation props_I32Extend16S;
  private ConceptPresentation props_I32Extend8S;
  private ConceptPresentation props_I32GeS;
  private ConceptPresentation props_I32GeU;
  private ConceptPresentation props_I32GtS;
  private ConceptPresentation props_I32GtU;
  private ConceptPresentation props_I32LeS;
  private ConceptPresentation props_I32LeU;
  private ConceptPresentation props_I32Load;
  private ConceptPresentation props_I32Load16S;
  private ConceptPresentation props_I32Load16U;
  private ConceptPresentation props_I32Load8S;
  private ConceptPresentation props_I32Load8U;
  private ConceptPresentation props_I32LtS;
  private ConceptPresentation props_I32LtU;
  private ConceptPresentation props_I32Mul;
  private ConceptPresentation props_I32Ne;
  private ConceptPresentation props_I32Or;
  private ConceptPresentation props_I32Popcnt;
  private ConceptPresentation props_I32ReinterpretF32;
  private ConceptPresentation props_I32RemS;
  private ConceptPresentation props_I32RemU;
  private ConceptPresentation props_I32Rotl;
  private ConceptPresentation props_I32Rotr;
  private ConceptPresentation props_I32Shl;
  private ConceptPresentation props_I32ShrS;
  private ConceptPresentation props_I32ShrU;
  private ConceptPresentation props_I32Store;
  private ConceptPresentation props_I32Store16;
  private ConceptPresentation props_I32Store8;
  private ConceptPresentation props_I32Sub;
  private ConceptPresentation props_I32TruncF32S;
  private ConceptPresentation props_I32TruncF32U;
  private ConceptPresentation props_I32TruncF64S;
  private ConceptPresentation props_I32TruncF64U;
  private ConceptPresentation props_I32TruncSatF32S;
  private ConceptPresentation props_I32TruncSatF32U;
  private ConceptPresentation props_I32TruncSatF64S;
  private ConceptPresentation props_I32TruncSatF64U;
  private ConceptPresentation props_I32WrapI64;
  private ConceptPresentation props_I32Xor;
  private ConceptPresentation props_I32x4Abs;
  private ConceptPresentation props_I32x4Add;
  private ConceptPresentation props_I32x4AllTrue;
  private ConceptPresentation props_I32x4Bitmask;
  private ConceptPresentation props_I32x4DotI16x8S;
  private ConceptPresentation props_I32x4Eq;
  private ConceptPresentation props_I32x4ExtaddPairwiseI16x8S;
  private ConceptPresentation props_I32x4ExtaddPairwiseI16x8U;
  private ConceptPresentation props_I32x4ExtendHighI16x8S;
  private ConceptPresentation props_I32x4ExtendHighI16x8U;
  private ConceptPresentation props_I32x4ExtendLowI16x8S;
  private ConceptPresentation props_I32x4ExtendLowI16x8U;
  private ConceptPresentation props_I32x4ExtmulHighI16x8S;
  private ConceptPresentation props_I32x4ExtmulHighI16x8U;
  private ConceptPresentation props_I32x4ExtmulLowI16x8S;
  private ConceptPresentation props_I32x4ExtmulLowI16x8U;
  private ConceptPresentation props_I32x4ExtractLane;
  private ConceptPresentation props_I32x4GeS;
  private ConceptPresentation props_I32x4GeU;
  private ConceptPresentation props_I32x4GtS;
  private ConceptPresentation props_I32x4GtU;
  private ConceptPresentation props_I32x4LeS;
  private ConceptPresentation props_I32x4LeU;
  private ConceptPresentation props_I32x4LtS;
  private ConceptPresentation props_I32x4LtU;
  private ConceptPresentation props_I32x4MaxS;
  private ConceptPresentation props_I32x4MaxU;
  private ConceptPresentation props_I32x4MinS;
  private ConceptPresentation props_I32x4MinU;
  private ConceptPresentation props_I32x4Mul;
  private ConceptPresentation props_I32x4Ne;
  private ConceptPresentation props_I32x4Neg;
  private ConceptPresentation props_I32x4ReplaceLane;
  private ConceptPresentation props_I32x4Shl;
  private ConceptPresentation props_I32x4ShrS;
  private ConceptPresentation props_I32x4ShrU;
  private ConceptPresentation props_I32x4Splat;
  private ConceptPresentation props_I32x4Sub;
  private ConceptPresentation props_I32x4TruncSatF32x4S;
  private ConceptPresentation props_I32x4TruncSatF32x4U;
  private ConceptPresentation props_I32x4TruncSatF64x2SZero;
  private ConceptPresentation props_I64Add;
  private ConceptPresentation props_I64And;
  private ConceptPresentation props_I64Clz;
  private ConceptPresentation props_I64Const;
  private ConceptPresentation props_I64Ctz;
  private ConceptPresentation props_I64DivS;
  private ConceptPresentation props_I64DivU;
  private ConceptPresentation props_I64Eq;
  private ConceptPresentation props_I64Eqz;
  private ConceptPresentation props_I64Extend16S;
  private ConceptPresentation props_I64Extend32S;
  private ConceptPresentation props_I64Extend8S;
  private ConceptPresentation props_I64ExtendI32S;
  private ConceptPresentation props_I64ExtendI32U;
  private ConceptPresentation props_I64GeS;
  private ConceptPresentation props_I64GeU;
  private ConceptPresentation props_I64GtS;
  private ConceptPresentation props_I64GtU;
  private ConceptPresentation props_I64LeS;
  private ConceptPresentation props_I64LeU;
  private ConceptPresentation props_I64Load;
  private ConceptPresentation props_I64Load16S;
  private ConceptPresentation props_I64Load16U;
  private ConceptPresentation props_I64Load32S;
  private ConceptPresentation props_I64Load32U;
  private ConceptPresentation props_I64Load8S;
  private ConceptPresentation props_I64Load8U;
  private ConceptPresentation props_I64LtS;
  private ConceptPresentation props_I64LtU;
  private ConceptPresentation props_I64Mul;
  private ConceptPresentation props_I64Ne;
  private ConceptPresentation props_I64Or;
  private ConceptPresentation props_I64Popcnt;
  private ConceptPresentation props_I64ReinterpretF64;
  private ConceptPresentation props_I64RemS;
  private ConceptPresentation props_I64RemU;
  private ConceptPresentation props_I64Rotl;
  private ConceptPresentation props_I64Rotr;
  private ConceptPresentation props_I64Shl;
  private ConceptPresentation props_I64ShrS;
  private ConceptPresentation props_I64ShrU;
  private ConceptPresentation props_I64Store;
  private ConceptPresentation props_I64Store16;
  private ConceptPresentation props_I64Store32;
  private ConceptPresentation props_I64Store8;
  private ConceptPresentation props_I64Sub;
  private ConceptPresentation props_I64TruncF32S;
  private ConceptPresentation props_I64TruncF32U;
  private ConceptPresentation props_I64TruncF64S;
  private ConceptPresentation props_I64TruncF64U;
  private ConceptPresentation props_I64TruncSatF32S;
  private ConceptPresentation props_I64TruncSatF32U;
  private ConceptPresentation props_I64TruncSatF64S;
  private ConceptPresentation props_I64TruncSatF64U;
  private ConceptPresentation props_I64Xor;
  private ConceptPresentation props_I64x2Abs;
  private ConceptPresentation props_I64x2Add;
  private ConceptPresentation props_I64x2AllTrue;
  private ConceptPresentation props_I64x2Bitmask;
  private ConceptPresentation props_I64x2Eq;
  private ConceptPresentation props_I64x2ExtendHighI32x4S;
  private ConceptPresentation props_I64x2ExtendHighI32x4U;
  private ConceptPresentation props_I64x2ExtendLowI32x4S;
  private ConceptPresentation props_I64x2ExtendLowI32x4U;
  private ConceptPresentation props_I64x2ExtmulHighI32x4S;
  private ConceptPresentation props_I64x2ExtmulHighI32x4U;
  private ConceptPresentation props_I64x2ExtmulLowI32x4S;
  private ConceptPresentation props_I64x2ExtmulLowI32x4U;
  private ConceptPresentation props_I64x2ExtractLane;
  private ConceptPresentation props_I64x2GeS;
  private ConceptPresentation props_I64x2GtS;
  private ConceptPresentation props_I64x2LeS;
  private ConceptPresentation props_I64x2LtS;
  private ConceptPresentation props_I64x2Mul;
  private ConceptPresentation props_I64x2Ne;
  private ConceptPresentation props_I64x2Neg;
  private ConceptPresentation props_I64x2ReplaceLane;
  private ConceptPresentation props_I64x2Shl;
  private ConceptPresentation props_I64x2ShrS;
  private ConceptPresentation props_I64x2ShrU;
  private ConceptPresentation props_I64x2Splat;
  private ConceptPresentation props_I64x2Sub;
  private ConceptPresentation props_I8x16Abs;
  private ConceptPresentation props_I8x16Add;
  private ConceptPresentation props_I8x16AddSatS;
  private ConceptPresentation props_I8x16AddSatU;
  private ConceptPresentation props_I8x16AllTrue;
  private ConceptPresentation props_I8x16AvgrU;
  private ConceptPresentation props_I8x16Bitmask;
  private ConceptPresentation props_I8x16Eq;
  private ConceptPresentation props_I8x16ExtractLaneS;
  private ConceptPresentation props_I8x16ExtractLaneU;
  private ConceptPresentation props_I8x16GeS;
  private ConceptPresentation props_I8x16GeU;
  private ConceptPresentation props_I8x16GtS;
  private ConceptPresentation props_I8x16GtU;
  private ConceptPresentation props_I8x16LeS;
  private ConceptPresentation props_I8x16LeU;
  private ConceptPresentation props_I8x16LtS;
  private ConceptPresentation props_I8x16LtU;
  private ConceptPresentation props_I8x16MaxS;
  private ConceptPresentation props_I8x16MaxU;
  private ConceptPresentation props_I8x16MinS;
  private ConceptPresentation props_I8x16MinU;
  private ConceptPresentation props_I8x16NarrowI16x8S;
  private ConceptPresentation props_I8x16NarrowI16x8U;
  private ConceptPresentation props_I8x16Ne;
  private ConceptPresentation props_I8x16Neg;
  private ConceptPresentation props_I8x16Popcnt;
  private ConceptPresentation props_I8x16ReplaceLane;
  private ConceptPresentation props_I8x16Shl;
  private ConceptPresentation props_I8x16ShrS;
  private ConceptPresentation props_I8x16ShrU;
  private ConceptPresentation props_I8x16Shuffle;
  private ConceptPresentation props_I8x16Splat;
  private ConceptPresentation props_I8x16Sub;
  private ConceptPresentation props_I8x16SubSatS;
  private ConceptPresentation props_I8x16SubSatU;
  private ConceptPresentation props_I8x16Swizzle;
  private ConceptPresentation props_If;
  private ConceptPresentation props_IfElse;
  private ConceptPresentation props_Import;
  private ConceptPresentation props_ImportDesc;
  private ConceptPresentation props_ImportGlobalTypeDesc;
  private ConceptPresentation props_ImportMemTypeDesc;
  private ConceptPresentation props_ImportSection;
  private ConceptPresentation props_ImportTableTypeDesc;
  private ConceptPresentation props_ImportTypeIdxDesc;
  private ConceptPresentation props_Index;
  private ConceptPresentation props_Instr;
  private ConceptPresentation props_LabelIdx;
  private ConceptPresentation props_LaneIdx;
  private ConceptPresentation props_Limits;
  private ConceptPresentation props_LocalGet;
  private ConceptPresentation props_LocalIdx;
  private ConceptPresentation props_LocalSet;
  private ConceptPresentation props_LocalTee;
  private ConceptPresentation props_Locals;
  private ConceptPresentation props_Loop;
  private ConceptPresentation props_Mem;
  private ConceptPresentation props_MemArg;
  private ConceptPresentation props_MemExport;
  private ConceptPresentation props_MemIdx;
  private ConceptPresentation props_MemSection;
  private ConceptPresentation props_MemType;
  private ConceptPresentation props_MemoryCopy;
  private ConceptPresentation props_MemoryFill;
  private ConceptPresentation props_MemoryGrow;
  private ConceptPresentation props_MemoryInit;
  private ConceptPresentation props_MemorySize;
  private ConceptPresentation props_Module;
  private ConceptPresentation props_ModuleSection;
  private ConceptPresentation props_Nop;
  private ConceptPresentation props_NumType;
  private ConceptPresentation props_PassiveData;
  private ConceptPresentation props_PassiveElem;
  private ConceptPresentation props_PassiveExprsElem;
  private ConceptPresentation props_PlainVectorInstr;
  private ConceptPresentation props_RefFunc;
  private ConceptPresentation props_RefIsNull;
  private ConceptPresentation props_RefNull;
  private ConceptPresentation props_RefType;
  private ConceptPresentation props_ResultType;
  private ConceptPresentation props_Return;
  private ConceptPresentation props_Select;
  private ConceptPresentation props_SelectTypes;
  private ConceptPresentation props_StartSection;
  private ConceptPresentation props_Table;
  private ConceptPresentation props_TableCopy;
  private ConceptPresentation props_TableExport;
  private ConceptPresentation props_TableFill;
  private ConceptPresentation props_TableGet;
  private ConceptPresentation props_TableGrow;
  private ConceptPresentation props_TableIdx;
  private ConceptPresentation props_TableInit;
  private ConceptPresentation props_TableSection;
  private ConceptPresentation props_TableSet;
  private ConceptPresentation props_TableSize;
  private ConceptPresentation props_TableType;
  private ConceptPresentation props_TypeIdx;
  private ConceptPresentation props_TypeIdxBlockType;
  private ConceptPresentation props_TypeSection;
  private ConceptPresentation props_U32Val;
  private ConceptPresentation props_Unreachable;
  private ConceptPresentation props_V128And;
  private ConceptPresentation props_V128AndNot;
  private ConceptPresentation props_V128AnyTrue;
  private ConceptPresentation props_V128Bitselect;
  private ConceptPresentation props_V128Const;
  private ConceptPresentation props_V128Load;
  private ConceptPresentation props_V128Load16Lane;
  private ConceptPresentation props_V128Load16Splat;
  private ConceptPresentation props_V128Load16x4S;
  private ConceptPresentation props_V128Load16x4U;
  private ConceptPresentation props_V128Load32Lane;
  private ConceptPresentation props_V128Load32Splat;
  private ConceptPresentation props_V128Load32Zero;
  private ConceptPresentation props_V128Load32x2S;
  private ConceptPresentation props_V128Load32x2U;
  private ConceptPresentation props_V128Load64Lane;
  private ConceptPresentation props_V128Load64Splat;
  private ConceptPresentation props_V128Load64Zero;
  private ConceptPresentation props_V128Load8Lane;
  private ConceptPresentation props_V128Load8Splat;
  private ConceptPresentation props_V128Load8x8S;
  private ConceptPresentation props_V128Load8x8U;
  private ConceptPresentation props_V128Not;
  private ConceptPresentation props_V128Or;
  private ConceptPresentation props_V128Store;
  private ConceptPresentation props_V128Store16Lane;
  private ConceptPresentation props_V128Store32Lane;
  private ConceptPresentation props_V128Store64Lane;
  private ConceptPresentation props_V128Store8Lane;
  private ConceptPresentation props_V128Xor;
  private ConceptPresentation props_ValBlockType;
  private ConceptPresentation props_ValTypeContainer;
  private ConceptPresentation props_VecType;
  private ConceptPresentation props_i32x4TruncSatF64x2UZero;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.ActiveData:
        if (props_ActiveData == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("active");
          props_ActiveData = cpb.create();
        }
        return props_ActiveData;
      case LanguageConceptSwitch.ActiveElem:
        if (props_ActiveElem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("active");
          props_ActiveElem = cpb.create();
        }
        return props_ActiveElem;
      case LanguageConceptSwitch.ActiveExplicitElem:
        if (props_ActiveExplicitElem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("active_explicit");
          props_ActiveExplicitElem = cpb.create();
        }
        return props_ActiveExplicitElem;
      case LanguageConceptSwitch.ActiveExplicitExprsElem:
        if (props_ActiveExplicitExprsElem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("active_explicit_exprs");
          props_ActiveExplicitExprsElem = cpb.create();
        }
        return props_ActiveExplicitExprsElem;
      case LanguageConceptSwitch.ActiveExprsElem:
        if (props_ActiveExprsElem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("active_exprs");
          props_ActiveExprsElem = cpb.create();
        }
        return props_ActiveExprsElem;
      case LanguageConceptSwitch.ActiveIndexedData:
        if (props_ActiveIndexedData == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("activeindexed");
          props_ActiveIndexedData = cpb.create();
        }
        return props_ActiveIndexedData;
      case LanguageConceptSwitch.Block:
        if (props_Block == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("block");
          props_Block = cpb.create();
        }
        return props_Block;
      case LanguageConceptSwitch.BlockType:
        if (props_BlockType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_BlockType = cpb.create();
        }
        return props_BlockType;
      case LanguageConceptSwitch.Br:
        if (props_Br == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("br");
          props_Br = cpb.create();
        }
        return props_Br;
      case LanguageConceptSwitch.BrIf:
        if (props_BrIf == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("br_if");
          props_BrIf = cpb.create();
        }
        return props_BrIf;
      case LanguageConceptSwitch.BrTable:
        if (props_BrTable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("br_table");
          props_BrTable = cpb.create();
        }
        return props_BrTable;
      case LanguageConceptSwitch.ByteSized:
        if (props_ByteSized == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ByteSized = cpb.create();
        }
        return props_ByteSized;
      case LanguageConceptSwitch.Call:
        if (props_Call == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("call");
          props_Call = cpb.create();
        }
        return props_Call;
      case LanguageConceptSwitch.CallIndirect:
        if (props_CallIndirect == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("call_indirect");
          props_CallIndirect = cpb.create();
        }
        return props_CallIndirect;
      case LanguageConceptSwitch.Code:
        if (props_Code == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("code");
          props_Code = cpb.create();
        }
        return props_Code;
      case LanguageConceptSwitch.CodeSection:
        if (props_CodeSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("code");
          props_CodeSection = cpb.create();
        }
        return props_CodeSection;
      case LanguageConceptSwitch.CustomSection:
        if (props_CustomSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("custom");
          props_CustomSection = cpb.create();
        }
        return props_CustomSection;
      case LanguageConceptSwitch.Data:
        if (props_Data == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Data = cpb.create();
        }
        return props_Data;
      case LanguageConceptSwitch.DataCountSection:
        if (props_DataCountSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("datacount");
          props_DataCountSection = cpb.create();
        }
        return props_DataCountSection;
      case LanguageConceptSwitch.DataDrop:
        if (props_DataDrop == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("data.drop");
          props_DataDrop = cpb.create();
        }
        return props_DataDrop;
      case LanguageConceptSwitch.DataIdx:
        if (props_DataIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("dataidx");
          props_DataIdx = cpb.create();
        }
        return props_DataIdx;
      case LanguageConceptSwitch.DataSection:
        if (props_DataSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("datas");
          props_DataSection = cpb.create();
        }
        return props_DataSection;
      case LanguageConceptSwitch.DeclarativeElem:
        if (props_DeclarativeElem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("declarative");
          props_DeclarativeElem = cpb.create();
        }
        return props_DeclarativeElem;
      case LanguageConceptSwitch.DeclarativeExprsElem:
        if (props_DeclarativeExprsElem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("active_exprs");
          props_DeclarativeExprsElem = cpb.create();
        }
        return props_DeclarativeExprsElem;
      case LanguageConceptSwitch.Drop:
        if (props_Drop == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("drop");
          props_Drop = cpb.create();
        }
        return props_Drop;
      case LanguageConceptSwitch.Elem:
        if (props_Elem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Elem = cpb.create();
        }
        return props_Elem;
      case LanguageConceptSwitch.ElemActiveExpr:
        if (props_ElemActiveExpr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("active.expr");
          props_ElemActiveExpr = cpb.create();
        }
        return props_ElemActiveExpr;
      case LanguageConceptSwitch.ElemDrop:
        if (props_ElemDrop == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("elem.drop");
          props_ElemDrop = cpb.create();
        }
        return props_ElemDrop;
      case LanguageConceptSwitch.ElemIdx:
        if (props_ElemIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("elemidx");
          props_ElemIdx = cpb.create();
        }
        return props_ElemIdx;
      case LanguageConceptSwitch.ElemSection:
        if (props_ElemSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("elems");
          props_ElemSection = cpb.create();
        }
        return props_ElemSection;
      case LanguageConceptSwitch.EmptyBlockType:
        if (props_EmptyBlockType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("empty");
          props_EmptyBlockType = cpb.create();
        }
        return props_EmptyBlockType;
      case LanguageConceptSwitch.EmptyInstruction:
        if (props_EmptyInstruction == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("EmptyInstruction");
          props_EmptyInstruction = cpb.create();
        }
        return props_EmptyInstruction;
      case LanguageConceptSwitch.Export:
        if (props_Export == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("export");
          props_Export = cpb.create();
        }
        return props_Export;
      case LanguageConceptSwitch.ExportDesc:
        if (props_ExportDesc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ExportDesc = cpb.create();
        }
        return props_ExportDesc;
      case LanguageConceptSwitch.ExportSection:
        if (props_ExportSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("exports");
          props_ExportSection = cpb.create();
        }
        return props_ExportSection;
      case LanguageConceptSwitch.Expr:
        if (props_Expr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("expr");
          props_Expr = cpb.create();
        }
        return props_Expr;
      case LanguageConceptSwitch.F32Abs:
        if (props_F32Abs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.abs");
          props_F32Abs = cpb.create();
        }
        return props_F32Abs;
      case LanguageConceptSwitch.F32Add:
        if (props_F32Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.add");
          props_F32Add = cpb.create();
        }
        return props_F32Add;
      case LanguageConceptSwitch.F32Ceil:
        if (props_F32Ceil == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.ceil");
          props_F32Ceil = cpb.create();
        }
        return props_F32Ceil;
      case LanguageConceptSwitch.F32Const:
        if (props_F32Const == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.const");
          props_F32Const = cpb.create();
        }
        return props_F32Const;
      case LanguageConceptSwitch.F32ConvertI32S:
        if (props_F32ConvertI32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.convert_i32_s");
          props_F32ConvertI32S = cpb.create();
        }
        return props_F32ConvertI32S;
      case LanguageConceptSwitch.F32ConvertI32U:
        if (props_F32ConvertI32U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.convert_i32_u");
          props_F32ConvertI32U = cpb.create();
        }
        return props_F32ConvertI32U;
      case LanguageConceptSwitch.F32ConvertI64S:
        if (props_F32ConvertI64S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.convert_i64_s");
          props_F32ConvertI64S = cpb.create();
        }
        return props_F32ConvertI64S;
      case LanguageConceptSwitch.F32ConvertI64U:
        if (props_F32ConvertI64U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.convert_i64_u");
          props_F32ConvertI64U = cpb.create();
        }
        return props_F32ConvertI64U;
      case LanguageConceptSwitch.F32Copysign:
        if (props_F32Copysign == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.copysign");
          props_F32Copysign = cpb.create();
        }
        return props_F32Copysign;
      case LanguageConceptSwitch.F32DemoteF64:
        if (props_F32DemoteF64 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.demote_f64");
          props_F32DemoteF64 = cpb.create();
        }
        return props_F32DemoteF64;
      case LanguageConceptSwitch.F32Div:
        if (props_F32Div == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.div");
          props_F32Div = cpb.create();
        }
        return props_F32Div;
      case LanguageConceptSwitch.F32Eq:
        if (props_F32Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.eq");
          props_F32Eq = cpb.create();
        }
        return props_F32Eq;
      case LanguageConceptSwitch.F32Floor:
        if (props_F32Floor == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.floor");
          props_F32Floor = cpb.create();
        }
        return props_F32Floor;
      case LanguageConceptSwitch.F32Ge:
        if (props_F32Ge == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.ge");
          props_F32Ge = cpb.create();
        }
        return props_F32Ge;
      case LanguageConceptSwitch.F32Gt:
        if (props_F32Gt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.gt");
          props_F32Gt = cpb.create();
        }
        return props_F32Gt;
      case LanguageConceptSwitch.F32Le:
        if (props_F32Le == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.le");
          props_F32Le = cpb.create();
        }
        return props_F32Le;
      case LanguageConceptSwitch.F32Load:
        if (props_F32Load == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.load");
          props_F32Load = cpb.create();
        }
        return props_F32Load;
      case LanguageConceptSwitch.F32Lt:
        if (props_F32Lt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.lt");
          props_F32Lt = cpb.create();
        }
        return props_F32Lt;
      case LanguageConceptSwitch.F32Max:
        if (props_F32Max == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.max");
          props_F32Max = cpb.create();
        }
        return props_F32Max;
      case LanguageConceptSwitch.F32Min:
        if (props_F32Min == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.min");
          props_F32Min = cpb.create();
        }
        return props_F32Min;
      case LanguageConceptSwitch.F32Mul:
        if (props_F32Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.mul");
          props_F32Mul = cpb.create();
        }
        return props_F32Mul;
      case LanguageConceptSwitch.F32Ne:
        if (props_F32Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.ne");
          props_F32Ne = cpb.create();
        }
        return props_F32Ne;
      case LanguageConceptSwitch.F32Nearest:
        if (props_F32Nearest == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.nearest");
          props_F32Nearest = cpb.create();
        }
        return props_F32Nearest;
      case LanguageConceptSwitch.F32Neg:
        if (props_F32Neg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.neg");
          props_F32Neg = cpb.create();
        }
        return props_F32Neg;
      case LanguageConceptSwitch.F32ReinterpretI32:
        if (props_F32ReinterpretI32 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.reinterpret_i32");
          props_F32ReinterpretI32 = cpb.create();
        }
        return props_F32ReinterpretI32;
      case LanguageConceptSwitch.F32Sqrt:
        if (props_F32Sqrt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.sqrt");
          props_F32Sqrt = cpb.create();
        }
        return props_F32Sqrt;
      case LanguageConceptSwitch.F32Store:
        if (props_F32Store == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.store");
          props_F32Store = cpb.create();
        }
        return props_F32Store;
      case LanguageConceptSwitch.F32Sub:
        if (props_F32Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.sub");
          props_F32Sub = cpb.create();
        }
        return props_F32Sub;
      case LanguageConceptSwitch.F32Trunc:
        if (props_F32Trunc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32.trunc");
          props_F32Trunc = cpb.create();
        }
        return props_F32Trunc;
      case LanguageConceptSwitch.F32x4Abs:
        if (props_F32x4Abs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.abs");
          props_F32x4Abs = cpb.create();
        }
        return props_F32x4Abs;
      case LanguageConceptSwitch.F32x4Add:
        if (props_F32x4Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.add");
          props_F32x4Add = cpb.create();
        }
        return props_F32x4Add;
      case LanguageConceptSwitch.F32x4Ceil:
        if (props_F32x4Ceil == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.ceil");
          props_F32x4Ceil = cpb.create();
        }
        return props_F32x4Ceil;
      case LanguageConceptSwitch.F32x4ConvertI32x4S:
        if (props_F32x4ConvertI32x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.convert_i32x4_s");
          props_F32x4ConvertI32x4S = cpb.create();
        }
        return props_F32x4ConvertI32x4S;
      case LanguageConceptSwitch.F32x4ConvertI32x4U:
        if (props_F32x4ConvertI32x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.convert_i32x4_u");
          props_F32x4ConvertI32x4U = cpb.create();
        }
        return props_F32x4ConvertI32x4U;
      case LanguageConceptSwitch.F32x4DemoteF64x2Zero:
        if (props_F32x4DemoteF64x2Zero == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.demote_f64x2_zero");
          props_F32x4DemoteF64x2Zero = cpb.create();
        }
        return props_F32x4DemoteF64x2Zero;
      case LanguageConceptSwitch.F32x4Div:
        if (props_F32x4Div == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.div");
          props_F32x4Div = cpb.create();
        }
        return props_F32x4Div;
      case LanguageConceptSwitch.F32x4Eq:
        if (props_F32x4Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.eq");
          props_F32x4Eq = cpb.create();
        }
        return props_F32x4Eq;
      case LanguageConceptSwitch.F32x4ExtractLane:
        if (props_F32x4ExtractLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.extract_lane");
          props_F32x4ExtractLane = cpb.create();
        }
        return props_F32x4ExtractLane;
      case LanguageConceptSwitch.F32x4Floor:
        if (props_F32x4Floor == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.floor");
          props_F32x4Floor = cpb.create();
        }
        return props_F32x4Floor;
      case LanguageConceptSwitch.F32x4Ge:
        if (props_F32x4Ge == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.ge");
          props_F32x4Ge = cpb.create();
        }
        return props_F32x4Ge;
      case LanguageConceptSwitch.F32x4Gt:
        if (props_F32x4Gt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.gt");
          props_F32x4Gt = cpb.create();
        }
        return props_F32x4Gt;
      case LanguageConceptSwitch.F32x4Le:
        if (props_F32x4Le == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.le");
          props_F32x4Le = cpb.create();
        }
        return props_F32x4Le;
      case LanguageConceptSwitch.F32x4Lt:
        if (props_F32x4Lt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.lt");
          props_F32x4Lt = cpb.create();
        }
        return props_F32x4Lt;
      case LanguageConceptSwitch.F32x4Max:
        if (props_F32x4Max == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.max");
          props_F32x4Max = cpb.create();
        }
        return props_F32x4Max;
      case LanguageConceptSwitch.F32x4Min:
        if (props_F32x4Min == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.min");
          props_F32x4Min = cpb.create();
        }
        return props_F32x4Min;
      case LanguageConceptSwitch.F32x4Mul:
        if (props_F32x4Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.mul");
          props_F32x4Mul = cpb.create();
        }
        return props_F32x4Mul;
      case LanguageConceptSwitch.F32x4Ne:
        if (props_F32x4Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.ne");
          props_F32x4Ne = cpb.create();
        }
        return props_F32x4Ne;
      case LanguageConceptSwitch.F32x4Nearest:
        if (props_F32x4Nearest == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.nearest");
          props_F32x4Nearest = cpb.create();
        }
        return props_F32x4Nearest;
      case LanguageConceptSwitch.F32x4Neg:
        if (props_F32x4Neg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.neg");
          props_F32x4Neg = cpb.create();
        }
        return props_F32x4Neg;
      case LanguageConceptSwitch.F32x4Pmax:
        if (props_F32x4Pmax == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.pmax");
          props_F32x4Pmax = cpb.create();
        }
        return props_F32x4Pmax;
      case LanguageConceptSwitch.F32x4Pmin:
        if (props_F32x4Pmin == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.pmin");
          props_F32x4Pmin = cpb.create();
        }
        return props_F32x4Pmin;
      case LanguageConceptSwitch.F32x4ReplaceLane:
        if (props_F32x4ReplaceLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.replace_lane");
          props_F32x4ReplaceLane = cpb.create();
        }
        return props_F32x4ReplaceLane;
      case LanguageConceptSwitch.F32x4Splat:
        if (props_F32x4Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.splat");
          props_F32x4Splat = cpb.create();
        }
        return props_F32x4Splat;
      case LanguageConceptSwitch.F32x4Sqrt:
        if (props_F32x4Sqrt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.sqrt");
          props_F32x4Sqrt = cpb.create();
        }
        return props_F32x4Sqrt;
      case LanguageConceptSwitch.F32x4Sub:
        if (props_F32x4Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.sub");
          props_F32x4Sub = cpb.create();
        }
        return props_F32x4Sub;
      case LanguageConceptSwitch.F32x4Trunc:
        if (props_F32x4Trunc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f32x4.trunc");
          props_F32x4Trunc = cpb.create();
        }
        return props_F32x4Trunc;
      case LanguageConceptSwitch.F64Abs:
        if (props_F64Abs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.abs");
          props_F64Abs = cpb.create();
        }
        return props_F64Abs;
      case LanguageConceptSwitch.F64Add:
        if (props_F64Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.add");
          props_F64Add = cpb.create();
        }
        return props_F64Add;
      case LanguageConceptSwitch.F64Ceil:
        if (props_F64Ceil == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.ceil");
          props_F64Ceil = cpb.create();
        }
        return props_F64Ceil;
      case LanguageConceptSwitch.F64Const:
        if (props_F64Const == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.const");
          props_F64Const = cpb.create();
        }
        return props_F64Const;
      case LanguageConceptSwitch.F64ConvertI32S:
        if (props_F64ConvertI32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.convert_i32_s");
          props_F64ConvertI32S = cpb.create();
        }
        return props_F64ConvertI32S;
      case LanguageConceptSwitch.F64ConvertI32U:
        if (props_F64ConvertI32U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.convert_i32_u");
          props_F64ConvertI32U = cpb.create();
        }
        return props_F64ConvertI32U;
      case LanguageConceptSwitch.F64ConvertI64S:
        if (props_F64ConvertI64S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.convert_i64_s");
          props_F64ConvertI64S = cpb.create();
        }
        return props_F64ConvertI64S;
      case LanguageConceptSwitch.F64ConvertI64U:
        if (props_F64ConvertI64U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.convert_i64_u");
          props_F64ConvertI64U = cpb.create();
        }
        return props_F64ConvertI64U;
      case LanguageConceptSwitch.F64Copysign:
        if (props_F64Copysign == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.copysign");
          props_F64Copysign = cpb.create();
        }
        return props_F64Copysign;
      case LanguageConceptSwitch.F64Div:
        if (props_F64Div == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.div");
          props_F64Div = cpb.create();
        }
        return props_F64Div;
      case LanguageConceptSwitch.F64Eq:
        if (props_F64Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.eq");
          props_F64Eq = cpb.create();
        }
        return props_F64Eq;
      case LanguageConceptSwitch.F64Floor:
        if (props_F64Floor == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.floor");
          props_F64Floor = cpb.create();
        }
        return props_F64Floor;
      case LanguageConceptSwitch.F64Ge:
        if (props_F64Ge == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.ge");
          props_F64Ge = cpb.create();
        }
        return props_F64Ge;
      case LanguageConceptSwitch.F64Gt:
        if (props_F64Gt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.gt");
          props_F64Gt = cpb.create();
        }
        return props_F64Gt;
      case LanguageConceptSwitch.F64Le:
        if (props_F64Le == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.le");
          props_F64Le = cpb.create();
        }
        return props_F64Le;
      case LanguageConceptSwitch.F64Load:
        if (props_F64Load == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.load");
          props_F64Load = cpb.create();
        }
        return props_F64Load;
      case LanguageConceptSwitch.F64Lt:
        if (props_F64Lt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.lt");
          props_F64Lt = cpb.create();
        }
        return props_F64Lt;
      case LanguageConceptSwitch.F64Max:
        if (props_F64Max == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.max");
          props_F64Max = cpb.create();
        }
        return props_F64Max;
      case LanguageConceptSwitch.F64Min:
        if (props_F64Min == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.min");
          props_F64Min = cpb.create();
        }
        return props_F64Min;
      case LanguageConceptSwitch.F64Mul:
        if (props_F64Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.mul");
          props_F64Mul = cpb.create();
        }
        return props_F64Mul;
      case LanguageConceptSwitch.F64Ne:
        if (props_F64Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.ne");
          props_F64Ne = cpb.create();
        }
        return props_F64Ne;
      case LanguageConceptSwitch.F64Nearest:
        if (props_F64Nearest == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.nearest");
          props_F64Nearest = cpb.create();
        }
        return props_F64Nearest;
      case LanguageConceptSwitch.F64Neg:
        if (props_F64Neg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.neg");
          props_F64Neg = cpb.create();
        }
        return props_F64Neg;
      case LanguageConceptSwitch.F64PromoteF32:
        if (props_F64PromoteF32 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.promote_f32");
          props_F64PromoteF32 = cpb.create();
        }
        return props_F64PromoteF32;
      case LanguageConceptSwitch.F64ReinterpretI64:
        if (props_F64ReinterpretI64 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.reinterpret_i64");
          props_F64ReinterpretI64 = cpb.create();
        }
        return props_F64ReinterpretI64;
      case LanguageConceptSwitch.F64Sqrt:
        if (props_F64Sqrt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.sqrt");
          props_F64Sqrt = cpb.create();
        }
        return props_F64Sqrt;
      case LanguageConceptSwitch.F64Store:
        if (props_F64Store == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.store");
          props_F64Store = cpb.create();
        }
        return props_F64Store;
      case LanguageConceptSwitch.F64Sub:
        if (props_F64Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.sub");
          props_F64Sub = cpb.create();
        }
        return props_F64Sub;
      case LanguageConceptSwitch.F64Trunc:
        if (props_F64Trunc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64.trunc");
          props_F64Trunc = cpb.create();
        }
        return props_F64Trunc;
      case LanguageConceptSwitch.F64x2Abs:
        if (props_F64x2Abs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.abs");
          props_F64x2Abs = cpb.create();
        }
        return props_F64x2Abs;
      case LanguageConceptSwitch.F64x2Add:
        if (props_F64x2Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.add");
          props_F64x2Add = cpb.create();
        }
        return props_F64x2Add;
      case LanguageConceptSwitch.F64x2Ceil:
        if (props_F64x2Ceil == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.ceil");
          props_F64x2Ceil = cpb.create();
        }
        return props_F64x2Ceil;
      case LanguageConceptSwitch.F64x2ConvertLowI32x4S:
        if (props_F64x2ConvertLowI32x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.convert_low_i32x4_s");
          props_F64x2ConvertLowI32x4S = cpb.create();
        }
        return props_F64x2ConvertLowI32x4S;
      case LanguageConceptSwitch.F64x2ConvertLowI32x4U:
        if (props_F64x2ConvertLowI32x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.convert_low_i32x4_u");
          props_F64x2ConvertLowI32x4U = cpb.create();
        }
        return props_F64x2ConvertLowI32x4U;
      case LanguageConceptSwitch.F64x2Div:
        if (props_F64x2Div == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("F64x2.div");
          props_F64x2Div = cpb.create();
        }
        return props_F64x2Div;
      case LanguageConceptSwitch.F64x2Eq:
        if (props_F64x2Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.eq");
          props_F64x2Eq = cpb.create();
        }
        return props_F64x2Eq;
      case LanguageConceptSwitch.F64x2ExtractLane:
        if (props_F64x2ExtractLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.extract_lane");
          props_F64x2ExtractLane = cpb.create();
        }
        return props_F64x2ExtractLane;
      case LanguageConceptSwitch.F64x2Floor:
        if (props_F64x2Floor == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.floor");
          props_F64x2Floor = cpb.create();
        }
        return props_F64x2Floor;
      case LanguageConceptSwitch.F64x2Ge:
        if (props_F64x2Ge == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.ge");
          props_F64x2Ge = cpb.create();
        }
        return props_F64x2Ge;
      case LanguageConceptSwitch.F64x2Gt:
        if (props_F64x2Gt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.gt");
          props_F64x2Gt = cpb.create();
        }
        return props_F64x2Gt;
      case LanguageConceptSwitch.F64x2Le:
        if (props_F64x2Le == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.le");
          props_F64x2Le = cpb.create();
        }
        return props_F64x2Le;
      case LanguageConceptSwitch.F64x2Lt:
        if (props_F64x2Lt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.lt");
          props_F64x2Lt = cpb.create();
        }
        return props_F64x2Lt;
      case LanguageConceptSwitch.F64x2Max:
        if (props_F64x2Max == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.max");
          props_F64x2Max = cpb.create();
        }
        return props_F64x2Max;
      case LanguageConceptSwitch.F64x2Min:
        if (props_F64x2Min == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.min");
          props_F64x2Min = cpb.create();
        }
        return props_F64x2Min;
      case LanguageConceptSwitch.F64x2Mul:
        if (props_F64x2Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.mul");
          props_F64x2Mul = cpb.create();
        }
        return props_F64x2Mul;
      case LanguageConceptSwitch.F64x2Ne:
        if (props_F64x2Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.ne");
          props_F64x2Ne = cpb.create();
        }
        return props_F64x2Ne;
      case LanguageConceptSwitch.F64x2Nearest:
        if (props_F64x2Nearest == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.nearest");
          props_F64x2Nearest = cpb.create();
        }
        return props_F64x2Nearest;
      case LanguageConceptSwitch.F64x2Neg:
        if (props_F64x2Neg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.neg");
          props_F64x2Neg = cpb.create();
        }
        return props_F64x2Neg;
      case LanguageConceptSwitch.F64x2Pmax:
        if (props_F64x2Pmax == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.pmax");
          props_F64x2Pmax = cpb.create();
        }
        return props_F64x2Pmax;
      case LanguageConceptSwitch.F64x2Pmin:
        if (props_F64x2Pmin == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.pmin");
          props_F64x2Pmin = cpb.create();
        }
        return props_F64x2Pmin;
      case LanguageConceptSwitch.F64x2PromoteLowF32x4:
        if (props_F64x2PromoteLowF32x4 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.promote_low_f32x4");
          props_F64x2PromoteLowF32x4 = cpb.create();
        }
        return props_F64x2PromoteLowF32x4;
      case LanguageConceptSwitch.F64x2ReplaceLane:
        if (props_F64x2ReplaceLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.replace_lane");
          props_F64x2ReplaceLane = cpb.create();
        }
        return props_F64x2ReplaceLane;
      case LanguageConceptSwitch.F64x2Splat:
        if (props_F64x2Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.splat");
          props_F64x2Splat = cpb.create();
        }
        return props_F64x2Splat;
      case LanguageConceptSwitch.F64x2Sqrt:
        if (props_F64x2Sqrt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.sqrt");
          props_F64x2Sqrt = cpb.create();
        }
        return props_F64x2Sqrt;
      case LanguageConceptSwitch.F64x2Sub:
        if (props_F64x2Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.sub");
          props_F64x2Sub = cpb.create();
        }
        return props_F64x2Sub;
      case LanguageConceptSwitch.F64x2Trunc:
        if (props_F64x2Trunc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("f64x2.trunc");
          props_F64x2Trunc = cpb.create();
        }
        return props_F64x2Trunc;
      case LanguageConceptSwitch.Func:
        if (props_Func == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("func");
          props_Func = cpb.create();
        }
        return props_Func;
      case LanguageConceptSwitch.FuncExport:
        if (props_FuncExport == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("func");
          props_FuncExport = cpb.create();
        }
        return props_FuncExport;
      case LanguageConceptSwitch.FuncIdx:
        if (props_FuncIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("funcidx");
          props_FuncIdx = cpb.create();
        }
        return props_FuncIdx;
      case LanguageConceptSwitch.FuncSection:
        if (props_FuncSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("funcs");
          props_FuncSection = cpb.create();
        }
        return props_FuncSection;
      case LanguageConceptSwitch.FuncType:
        if (props_FuncType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("functype");
          props_FuncType = cpb.create();
        }
        return props_FuncType;
      case LanguageConceptSwitch.Global:
        if (props_Global == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Global");
          props_Global = cpb.create();
        }
        return props_Global;
      case LanguageConceptSwitch.GlobalExport:
        if (props_GlobalExport == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("global");
          props_GlobalExport = cpb.create();
        }
        return props_GlobalExport;
      case LanguageConceptSwitch.GlobalGet:
        if (props_GlobalGet == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("global.get");
          props_GlobalGet = cpb.create();
        }
        return props_GlobalGet;
      case LanguageConceptSwitch.GlobalIdx:
        if (props_GlobalIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("GlobalIdx");
          props_GlobalIdx = cpb.create();
        }
        return props_GlobalIdx;
      case LanguageConceptSwitch.GlobalSection:
        if (props_GlobalSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("globals");
          props_GlobalSection = cpb.create();
        }
        return props_GlobalSection;
      case LanguageConceptSwitch.GlobalSet:
        if (props_GlobalSet == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("global.set");
          props_GlobalSet = cpb.create();
        }
        return props_GlobalSet;
      case LanguageConceptSwitch.GlobalType:
        if (props_GlobalType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("globaltype");
          props_GlobalType = cpb.create();
        }
        return props_GlobalType;
      case LanguageConceptSwitch.I16x8Abs:
        if (props_I16x8Abs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.abs");
          props_I16x8Abs = cpb.create();
        }
        return props_I16x8Abs;
      case LanguageConceptSwitch.I16x8Add:
        if (props_I16x8Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.add");
          props_I16x8Add = cpb.create();
        }
        return props_I16x8Add;
      case LanguageConceptSwitch.I16x8AddSatS:
        if (props_I16x8AddSatS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.add_sat_s");
          props_I16x8AddSatS = cpb.create();
        }
        return props_I16x8AddSatS;
      case LanguageConceptSwitch.I16x8AddSatU:
        if (props_I16x8AddSatU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.add_sat_u");
          props_I16x8AddSatU = cpb.create();
        }
        return props_I16x8AddSatU;
      case LanguageConceptSwitch.I16x8AllTrue:
        if (props_I16x8AllTrue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.all_true");
          props_I16x8AllTrue = cpb.create();
        }
        return props_I16x8AllTrue;
      case LanguageConceptSwitch.I16x8AvgrU:
        if (props_I16x8AvgrU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.avgr_u");
          props_I16x8AvgrU = cpb.create();
        }
        return props_I16x8AvgrU;
      case LanguageConceptSwitch.I16x8Bitmask:
        if (props_I16x8Bitmask == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.bitmask");
          props_I16x8Bitmask = cpb.create();
        }
        return props_I16x8Bitmask;
      case LanguageConceptSwitch.I16x8Eq:
        if (props_I16x8Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.eq");
          props_I16x8Eq = cpb.create();
        }
        return props_I16x8Eq;
      case LanguageConceptSwitch.I16x8ExtaddPairwiseI8x16S:
        if (props_I16x8ExtaddPairwiseI8x16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extadd_pairwise_i8x16_s");
          props_I16x8ExtaddPairwiseI8x16S = cpb.create();
        }
        return props_I16x8ExtaddPairwiseI8x16S;
      case LanguageConceptSwitch.I16x8ExtaddPairwiseI8x16U:
        if (props_I16x8ExtaddPairwiseI8x16U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extadd_pairwise_i8x16_u");
          props_I16x8ExtaddPairwiseI8x16U = cpb.create();
        }
        return props_I16x8ExtaddPairwiseI8x16U;
      case LanguageConceptSwitch.I16x8ExtendHighI8x16S:
        if (props_I16x8ExtendHighI8x16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extend_high_i8x16_s");
          props_I16x8ExtendHighI8x16S = cpb.create();
        }
        return props_I16x8ExtendHighI8x16S;
      case LanguageConceptSwitch.I16x8ExtendHighI8x16U:
        if (props_I16x8ExtendHighI8x16U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extend_high_i8x16_u");
          props_I16x8ExtendHighI8x16U = cpb.create();
        }
        return props_I16x8ExtendHighI8x16U;
      case LanguageConceptSwitch.I16x8ExtendLowI8x16S:
        if (props_I16x8ExtendLowI8x16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extend_low_i8x16_s");
          props_I16x8ExtendLowI8x16S = cpb.create();
        }
        return props_I16x8ExtendLowI8x16S;
      case LanguageConceptSwitch.I16x8ExtendLowI8x16U:
        if (props_I16x8ExtendLowI8x16U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extend_low_i8x16_u");
          props_I16x8ExtendLowI8x16U = cpb.create();
        }
        return props_I16x8ExtendLowI8x16U;
      case LanguageConceptSwitch.I16x8ExtmulHighI8x16S:
        if (props_I16x8ExtmulHighI8x16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extmul_high_i8x16_s");
          props_I16x8ExtmulHighI8x16S = cpb.create();
        }
        return props_I16x8ExtmulHighI8x16S;
      case LanguageConceptSwitch.I16x8ExtmulHighI8x16U:
        if (props_I16x8ExtmulHighI8x16U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extmul_high_i8x16_u");
          props_I16x8ExtmulHighI8x16U = cpb.create();
        }
        return props_I16x8ExtmulHighI8x16U;
      case LanguageConceptSwitch.I16x8ExtmulLowI8x16S:
        if (props_I16x8ExtmulLowI8x16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extmul_low_i8x16_s");
          props_I16x8ExtmulLowI8x16S = cpb.create();
        }
        return props_I16x8ExtmulLowI8x16S;
      case LanguageConceptSwitch.I16x8ExtmulLowI8x16U:
        if (props_I16x8ExtmulLowI8x16U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extmul_low_i8x16_u");
          props_I16x8ExtmulLowI8x16U = cpb.create();
        }
        return props_I16x8ExtmulLowI8x16U;
      case LanguageConceptSwitch.I16x8ExtractLaneS:
        if (props_I16x8ExtractLaneS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extract_lane_s");
          props_I16x8ExtractLaneS = cpb.create();
        }
        return props_I16x8ExtractLaneS;
      case LanguageConceptSwitch.I16x8ExtractLaneU:
        if (props_I16x8ExtractLaneU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.extract_lane_u");
          props_I16x8ExtractLaneU = cpb.create();
        }
        return props_I16x8ExtractLaneU;
      case LanguageConceptSwitch.I16x8GeS:
        if (props_I16x8GeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.ge_s");
          props_I16x8GeS = cpb.create();
        }
        return props_I16x8GeS;
      case LanguageConceptSwitch.I16x8GeU:
        if (props_I16x8GeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.ge_u");
          props_I16x8GeU = cpb.create();
        }
        return props_I16x8GeU;
      case LanguageConceptSwitch.I16x8GtS:
        if (props_I16x8GtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.gt_s");
          props_I16x8GtS = cpb.create();
        }
        return props_I16x8GtS;
      case LanguageConceptSwitch.I16x8GtU:
        if (props_I16x8GtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.gt_u");
          props_I16x8GtU = cpb.create();
        }
        return props_I16x8GtU;
      case LanguageConceptSwitch.I16x8LeS:
        if (props_I16x8LeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.le_s");
          props_I16x8LeS = cpb.create();
        }
        return props_I16x8LeS;
      case LanguageConceptSwitch.I16x8LeU:
        if (props_I16x8LeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.le_u");
          props_I16x8LeU = cpb.create();
        }
        return props_I16x8LeU;
      case LanguageConceptSwitch.I16x8LtS:
        if (props_I16x8LtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.lt_s");
          props_I16x8LtS = cpb.create();
        }
        return props_I16x8LtS;
      case LanguageConceptSwitch.I16x8LtU:
        if (props_I16x8LtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.lt_u");
          props_I16x8LtU = cpb.create();
        }
        return props_I16x8LtU;
      case LanguageConceptSwitch.I16x8MaxS:
        if (props_I16x8MaxS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.max_s");
          props_I16x8MaxS = cpb.create();
        }
        return props_I16x8MaxS;
      case LanguageConceptSwitch.I16x8MaxU:
        if (props_I16x8MaxU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.max_u");
          props_I16x8MaxU = cpb.create();
        }
        return props_I16x8MaxU;
      case LanguageConceptSwitch.I16x8MinS:
        if (props_I16x8MinS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.min_s");
          props_I16x8MinS = cpb.create();
        }
        return props_I16x8MinS;
      case LanguageConceptSwitch.I16x8MinU:
        if (props_I16x8MinU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.min_u");
          props_I16x8MinU = cpb.create();
        }
        return props_I16x8MinU;
      case LanguageConceptSwitch.I16x8Mul:
        if (props_I16x8Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.mul");
          props_I16x8Mul = cpb.create();
        }
        return props_I16x8Mul;
      case LanguageConceptSwitch.I16x8NarrowI32x4S:
        if (props_I16x8NarrowI32x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.narrow_i32x4_s");
          props_I16x8NarrowI32x4S = cpb.create();
        }
        return props_I16x8NarrowI32x4S;
      case LanguageConceptSwitch.I16x8NarrowI32x4U:
        if (props_I16x8NarrowI32x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.narrow_i32x4_u");
          props_I16x8NarrowI32x4U = cpb.create();
        }
        return props_I16x8NarrowI32x4U;
      case LanguageConceptSwitch.I16x8Ne:
        if (props_I16x8Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.ne");
          props_I16x8Ne = cpb.create();
        }
        return props_I16x8Ne;
      case LanguageConceptSwitch.I16x8Neg:
        if (props_I16x8Neg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.neg");
          props_I16x8Neg = cpb.create();
        }
        return props_I16x8Neg;
      case LanguageConceptSwitch.I16x8Q15mulrSatS:
        if (props_I16x8Q15mulrSatS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.q15mulr_sat_s");
          props_I16x8Q15mulrSatS = cpb.create();
        }
        return props_I16x8Q15mulrSatS;
      case LanguageConceptSwitch.I16x8ReplaceLane:
        if (props_I16x8ReplaceLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.replace_lane");
          props_I16x8ReplaceLane = cpb.create();
        }
        return props_I16x8ReplaceLane;
      case LanguageConceptSwitch.I16x8Shl:
        if (props_I16x8Shl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.shl");
          props_I16x8Shl = cpb.create();
        }
        return props_I16x8Shl;
      case LanguageConceptSwitch.I16x8ShrS:
        if (props_I16x8ShrS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.shr_s");
          props_I16x8ShrS = cpb.create();
        }
        return props_I16x8ShrS;
      case LanguageConceptSwitch.I16x8ShrU:
        if (props_I16x8ShrU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.shr_u");
          props_I16x8ShrU = cpb.create();
        }
        return props_I16x8ShrU;
      case LanguageConceptSwitch.I16x8Splat:
        if (props_I16x8Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.splat");
          props_I16x8Splat = cpb.create();
        }
        return props_I16x8Splat;
      case LanguageConceptSwitch.I16x8Sub:
        if (props_I16x8Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.sub");
          props_I16x8Sub = cpb.create();
        }
        return props_I16x8Sub;
      case LanguageConceptSwitch.I16x8SubSatS:
        if (props_I16x8SubSatS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.sub_sat_s");
          props_I16x8SubSatS = cpb.create();
        }
        return props_I16x8SubSatS;
      case LanguageConceptSwitch.I16x8SubSatU:
        if (props_I16x8SubSatU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i16x8.sub_sat_u");
          props_I16x8SubSatU = cpb.create();
        }
        return props_I16x8SubSatU;
      case LanguageConceptSwitch.I32Add:
        if (props_I32Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.add");
          props_I32Add = cpb.create();
        }
        return props_I32Add;
      case LanguageConceptSwitch.I32And:
        if (props_I32And == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.and");
          props_I32And = cpb.create();
        }
        return props_I32And;
      case LanguageConceptSwitch.I32Clz:
        if (props_I32Clz == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.clz");
          props_I32Clz = cpb.create();
        }
        return props_I32Clz;
      case LanguageConceptSwitch.I32Const:
        if (props_I32Const == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.const");
          props_I32Const = cpb.create();
        }
        return props_I32Const;
      case LanguageConceptSwitch.I32Ctz:
        if (props_I32Ctz == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.ctz");
          props_I32Ctz = cpb.create();
        }
        return props_I32Ctz;
      case LanguageConceptSwitch.I32DivS:
        if (props_I32DivS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.div_s");
          props_I32DivS = cpb.create();
        }
        return props_I32DivS;
      case LanguageConceptSwitch.I32DivU:
        if (props_I32DivU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.div_u");
          props_I32DivU = cpb.create();
        }
        return props_I32DivU;
      case LanguageConceptSwitch.I32Eq:
        if (props_I32Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.eq");
          props_I32Eq = cpb.create();
        }
        return props_I32Eq;
      case LanguageConceptSwitch.I32Eqz:
        if (props_I32Eqz == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.eqz");
          props_I32Eqz = cpb.create();
        }
        return props_I32Eqz;
      case LanguageConceptSwitch.I32Extend16S:
        if (props_I32Extend16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.extend16_s");
          props_I32Extend16S = cpb.create();
        }
        return props_I32Extend16S;
      case LanguageConceptSwitch.I32Extend8S:
        if (props_I32Extend8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.extend8_s");
          props_I32Extend8S = cpb.create();
        }
        return props_I32Extend8S;
      case LanguageConceptSwitch.I32GeS:
        if (props_I32GeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.ge_s");
          props_I32GeS = cpb.create();
        }
        return props_I32GeS;
      case LanguageConceptSwitch.I32GeU:
        if (props_I32GeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.ge_u");
          props_I32GeU = cpb.create();
        }
        return props_I32GeU;
      case LanguageConceptSwitch.I32GtS:
        if (props_I32GtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.gt_s");
          props_I32GtS = cpb.create();
        }
        return props_I32GtS;
      case LanguageConceptSwitch.I32GtU:
        if (props_I32GtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.gt_u");
          props_I32GtU = cpb.create();
        }
        return props_I32GtU;
      case LanguageConceptSwitch.I32LeS:
        if (props_I32LeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.le_s");
          props_I32LeS = cpb.create();
        }
        return props_I32LeS;
      case LanguageConceptSwitch.I32LeU:
        if (props_I32LeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.le_u");
          props_I32LeU = cpb.create();
        }
        return props_I32LeU;
      case LanguageConceptSwitch.I32Load:
        if (props_I32Load == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.load");
          props_I32Load = cpb.create();
        }
        return props_I32Load;
      case LanguageConceptSwitch.I32Load16S:
        if (props_I32Load16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.load16_s");
          props_I32Load16S = cpb.create();
        }
        return props_I32Load16S;
      case LanguageConceptSwitch.I32Load16U:
        if (props_I32Load16U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.load16_u");
          props_I32Load16U = cpb.create();
        }
        return props_I32Load16U;
      case LanguageConceptSwitch.I32Load8S:
        if (props_I32Load8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.load8_s");
          props_I32Load8S = cpb.create();
        }
        return props_I32Load8S;
      case LanguageConceptSwitch.I32Load8U:
        if (props_I32Load8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.load8_u");
          props_I32Load8U = cpb.create();
        }
        return props_I32Load8U;
      case LanguageConceptSwitch.I32LtS:
        if (props_I32LtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.lt_s");
          props_I32LtS = cpb.create();
        }
        return props_I32LtS;
      case LanguageConceptSwitch.I32LtU:
        if (props_I32LtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.lt_u");
          props_I32LtU = cpb.create();
        }
        return props_I32LtU;
      case LanguageConceptSwitch.I32Mul:
        if (props_I32Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.mul");
          props_I32Mul = cpb.create();
        }
        return props_I32Mul;
      case LanguageConceptSwitch.I32Ne:
        if (props_I32Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.ne");
          props_I32Ne = cpb.create();
        }
        return props_I32Ne;
      case LanguageConceptSwitch.I32Or:
        if (props_I32Or == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.or");
          props_I32Or = cpb.create();
        }
        return props_I32Or;
      case LanguageConceptSwitch.I32Popcnt:
        if (props_I32Popcnt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.popcnt");
          props_I32Popcnt = cpb.create();
        }
        return props_I32Popcnt;
      case LanguageConceptSwitch.I32ReinterpretF32:
        if (props_I32ReinterpretF32 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.reinterpret_f32");
          props_I32ReinterpretF32 = cpb.create();
        }
        return props_I32ReinterpretF32;
      case LanguageConceptSwitch.I32RemS:
        if (props_I32RemS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.rem_s");
          props_I32RemS = cpb.create();
        }
        return props_I32RemS;
      case LanguageConceptSwitch.I32RemU:
        if (props_I32RemU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.rem_u");
          props_I32RemU = cpb.create();
        }
        return props_I32RemU;
      case LanguageConceptSwitch.I32Rotl:
        if (props_I32Rotl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.rotl");
          props_I32Rotl = cpb.create();
        }
        return props_I32Rotl;
      case LanguageConceptSwitch.I32Rotr:
        if (props_I32Rotr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.rotr");
          props_I32Rotr = cpb.create();
        }
        return props_I32Rotr;
      case LanguageConceptSwitch.I32Shl:
        if (props_I32Shl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.shl");
          props_I32Shl = cpb.create();
        }
        return props_I32Shl;
      case LanguageConceptSwitch.I32ShrS:
        if (props_I32ShrS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.shr_s");
          props_I32ShrS = cpb.create();
        }
        return props_I32ShrS;
      case LanguageConceptSwitch.I32ShrU:
        if (props_I32ShrU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.shr_u");
          props_I32ShrU = cpb.create();
        }
        return props_I32ShrU;
      case LanguageConceptSwitch.I32Store:
        if (props_I32Store == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.store");
          props_I32Store = cpb.create();
        }
        return props_I32Store;
      case LanguageConceptSwitch.I32Store16:
        if (props_I32Store16 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.store16");
          props_I32Store16 = cpb.create();
        }
        return props_I32Store16;
      case LanguageConceptSwitch.I32Store8:
        if (props_I32Store8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.store8");
          props_I32Store8 = cpb.create();
        }
        return props_I32Store8;
      case LanguageConceptSwitch.I32Sub:
        if (props_I32Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.sub");
          props_I32Sub = cpb.create();
        }
        return props_I32Sub;
      case LanguageConceptSwitch.I32TruncF32S:
        if (props_I32TruncF32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.trunc_f32_s");
          props_I32TruncF32S = cpb.create();
        }
        return props_I32TruncF32S;
      case LanguageConceptSwitch.I32TruncF32U:
        if (props_I32TruncF32U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.trunc_f32_u");
          props_I32TruncF32U = cpb.create();
        }
        return props_I32TruncF32U;
      case LanguageConceptSwitch.I32TruncF64S:
        if (props_I32TruncF64S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.trunc_f64_s");
          props_I32TruncF64S = cpb.create();
        }
        return props_I32TruncF64S;
      case LanguageConceptSwitch.I32TruncF64U:
        if (props_I32TruncF64U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.trunc_f64_u");
          props_I32TruncF64U = cpb.create();
        }
        return props_I32TruncF64U;
      case LanguageConceptSwitch.I32TruncSatF32S:
        if (props_I32TruncSatF32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.trunc_sat_f32_s");
          props_I32TruncSatF32S = cpb.create();
        }
        return props_I32TruncSatF32S;
      case LanguageConceptSwitch.I32TruncSatF32U:
        if (props_I32TruncSatF32U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.trunc_sat_f32_u");
          props_I32TruncSatF32U = cpb.create();
        }
        return props_I32TruncSatF32U;
      case LanguageConceptSwitch.I32TruncSatF64S:
        if (props_I32TruncSatF64S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.trunc_sat_f64_s");
          props_I32TruncSatF64S = cpb.create();
        }
        return props_I32TruncSatF64S;
      case LanguageConceptSwitch.I32TruncSatF64U:
        if (props_I32TruncSatF64U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.trunc_sat_f64_u");
          props_I32TruncSatF64U = cpb.create();
        }
        return props_I32TruncSatF64U;
      case LanguageConceptSwitch.I32WrapI64:
        if (props_I32WrapI64 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.wrap_i64");
          props_I32WrapI64 = cpb.create();
        }
        return props_I32WrapI64;
      case LanguageConceptSwitch.I32Xor:
        if (props_I32Xor == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32.xor");
          props_I32Xor = cpb.create();
        }
        return props_I32Xor;
      case LanguageConceptSwitch.I32x4Abs:
        if (props_I32x4Abs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.abs");
          props_I32x4Abs = cpb.create();
        }
        return props_I32x4Abs;
      case LanguageConceptSwitch.I32x4Add:
        if (props_I32x4Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.add");
          props_I32x4Add = cpb.create();
        }
        return props_I32x4Add;
      case LanguageConceptSwitch.I32x4AllTrue:
        if (props_I32x4AllTrue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.all_true");
          props_I32x4AllTrue = cpb.create();
        }
        return props_I32x4AllTrue;
      case LanguageConceptSwitch.I32x4Bitmask:
        if (props_I32x4Bitmask == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.bitmask");
          props_I32x4Bitmask = cpb.create();
        }
        return props_I32x4Bitmask;
      case LanguageConceptSwitch.I32x4DotI16x8S:
        if (props_I32x4DotI16x8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.dot_i16x8_s");
          props_I32x4DotI16x8S = cpb.create();
        }
        return props_I32x4DotI16x8S;
      case LanguageConceptSwitch.I32x4Eq:
        if (props_I32x4Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.eq");
          props_I32x4Eq = cpb.create();
        }
        return props_I32x4Eq;
      case LanguageConceptSwitch.I32x4ExtaddPairwiseI16x8S:
        if (props_I32x4ExtaddPairwiseI16x8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extadd_pairwise_i16x8_s");
          props_I32x4ExtaddPairwiseI16x8S = cpb.create();
        }
        return props_I32x4ExtaddPairwiseI16x8S;
      case LanguageConceptSwitch.I32x4ExtaddPairwiseI16x8U:
        if (props_I32x4ExtaddPairwiseI16x8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extadd_pairwise_i16x8_u");
          props_I32x4ExtaddPairwiseI16x8U = cpb.create();
        }
        return props_I32x4ExtaddPairwiseI16x8U;
      case LanguageConceptSwitch.I32x4ExtendHighI16x8S:
        if (props_I32x4ExtendHighI16x8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extend_high_i16x8_s");
          props_I32x4ExtendHighI16x8S = cpb.create();
        }
        return props_I32x4ExtendHighI16x8S;
      case LanguageConceptSwitch.I32x4ExtendHighI16x8U:
        if (props_I32x4ExtendHighI16x8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extend_high_i16x8_u");
          props_I32x4ExtendHighI16x8U = cpb.create();
        }
        return props_I32x4ExtendHighI16x8U;
      case LanguageConceptSwitch.I32x4ExtendLowI16x8S:
        if (props_I32x4ExtendLowI16x8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extend_low_i16x8_s");
          props_I32x4ExtendLowI16x8S = cpb.create();
        }
        return props_I32x4ExtendLowI16x8S;
      case LanguageConceptSwitch.I32x4ExtendLowI16x8U:
        if (props_I32x4ExtendLowI16x8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extend_low_i16x8_u");
          props_I32x4ExtendLowI16x8U = cpb.create();
        }
        return props_I32x4ExtendLowI16x8U;
      case LanguageConceptSwitch.I32x4ExtmulHighI16x8S:
        if (props_I32x4ExtmulHighI16x8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extmul_high_i16x8_s");
          props_I32x4ExtmulHighI16x8S = cpb.create();
        }
        return props_I32x4ExtmulHighI16x8S;
      case LanguageConceptSwitch.I32x4ExtmulHighI16x8U:
        if (props_I32x4ExtmulHighI16x8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extmul_high_i16x8_u");
          props_I32x4ExtmulHighI16x8U = cpb.create();
        }
        return props_I32x4ExtmulHighI16x8U;
      case LanguageConceptSwitch.I32x4ExtmulLowI16x8S:
        if (props_I32x4ExtmulLowI16x8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extmul_low_i16x8_s");
          props_I32x4ExtmulLowI16x8S = cpb.create();
        }
        return props_I32x4ExtmulLowI16x8S;
      case LanguageConceptSwitch.I32x4ExtmulLowI16x8U:
        if (props_I32x4ExtmulLowI16x8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extmul_low_i16x8_u");
          props_I32x4ExtmulLowI16x8U = cpb.create();
        }
        return props_I32x4ExtmulLowI16x8U;
      case LanguageConceptSwitch.I32x4ExtractLane:
        if (props_I32x4ExtractLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.extract_lane");
          props_I32x4ExtractLane = cpb.create();
        }
        return props_I32x4ExtractLane;
      case LanguageConceptSwitch.I32x4GeS:
        if (props_I32x4GeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.ge_s");
          props_I32x4GeS = cpb.create();
        }
        return props_I32x4GeS;
      case LanguageConceptSwitch.I32x4GeU:
        if (props_I32x4GeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.ge_u");
          props_I32x4GeU = cpb.create();
        }
        return props_I32x4GeU;
      case LanguageConceptSwitch.I32x4GtS:
        if (props_I32x4GtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.gt_s");
          props_I32x4GtS = cpb.create();
        }
        return props_I32x4GtS;
      case LanguageConceptSwitch.I32x4GtU:
        if (props_I32x4GtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.gt_u");
          props_I32x4GtU = cpb.create();
        }
        return props_I32x4GtU;
      case LanguageConceptSwitch.I32x4LeS:
        if (props_I32x4LeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.le_s");
          props_I32x4LeS = cpb.create();
        }
        return props_I32x4LeS;
      case LanguageConceptSwitch.I32x4LeU:
        if (props_I32x4LeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.le_u");
          props_I32x4LeU = cpb.create();
        }
        return props_I32x4LeU;
      case LanguageConceptSwitch.I32x4LtS:
        if (props_I32x4LtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.lt_s");
          props_I32x4LtS = cpb.create();
        }
        return props_I32x4LtS;
      case LanguageConceptSwitch.I32x4LtU:
        if (props_I32x4LtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.lt_u");
          props_I32x4LtU = cpb.create();
        }
        return props_I32x4LtU;
      case LanguageConceptSwitch.I32x4MaxS:
        if (props_I32x4MaxS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.max_s");
          props_I32x4MaxS = cpb.create();
        }
        return props_I32x4MaxS;
      case LanguageConceptSwitch.I32x4MaxU:
        if (props_I32x4MaxU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.max_u");
          props_I32x4MaxU = cpb.create();
        }
        return props_I32x4MaxU;
      case LanguageConceptSwitch.I32x4MinS:
        if (props_I32x4MinS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.min_s");
          props_I32x4MinS = cpb.create();
        }
        return props_I32x4MinS;
      case LanguageConceptSwitch.I32x4MinU:
        if (props_I32x4MinU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.min_u");
          props_I32x4MinU = cpb.create();
        }
        return props_I32x4MinU;
      case LanguageConceptSwitch.I32x4Mul:
        if (props_I32x4Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.mul");
          props_I32x4Mul = cpb.create();
        }
        return props_I32x4Mul;
      case LanguageConceptSwitch.I32x4Ne:
        if (props_I32x4Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.ne");
          props_I32x4Ne = cpb.create();
        }
        return props_I32x4Ne;
      case LanguageConceptSwitch.I32x4Neg:
        if (props_I32x4Neg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.neg");
          props_I32x4Neg = cpb.create();
        }
        return props_I32x4Neg;
      case LanguageConceptSwitch.I32x4ReplaceLane:
        if (props_I32x4ReplaceLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.replace_lane");
          props_I32x4ReplaceLane = cpb.create();
        }
        return props_I32x4ReplaceLane;
      case LanguageConceptSwitch.I32x4Shl:
        if (props_I32x4Shl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.shl");
          props_I32x4Shl = cpb.create();
        }
        return props_I32x4Shl;
      case LanguageConceptSwitch.I32x4ShrS:
        if (props_I32x4ShrS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.shr_s");
          props_I32x4ShrS = cpb.create();
        }
        return props_I32x4ShrS;
      case LanguageConceptSwitch.I32x4ShrU:
        if (props_I32x4ShrU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.shr_u");
          props_I32x4ShrU = cpb.create();
        }
        return props_I32x4ShrU;
      case LanguageConceptSwitch.I32x4Splat:
        if (props_I32x4Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.splat");
          props_I32x4Splat = cpb.create();
        }
        return props_I32x4Splat;
      case LanguageConceptSwitch.I32x4Sub:
        if (props_I32x4Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.sub");
          props_I32x4Sub = cpb.create();
        }
        return props_I32x4Sub;
      case LanguageConceptSwitch.I32x4TruncSatF32x4S:
        if (props_I32x4TruncSatF32x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.trunc_sat_f32x4_s");
          props_I32x4TruncSatF32x4S = cpb.create();
        }
        return props_I32x4TruncSatF32x4S;
      case LanguageConceptSwitch.I32x4TruncSatF32x4U:
        if (props_I32x4TruncSatF32x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.trunc_sat_f32x4_u");
          props_I32x4TruncSatF32x4U = cpb.create();
        }
        return props_I32x4TruncSatF32x4U;
      case LanguageConceptSwitch.I32x4TruncSatF64x2SZero:
        if (props_I32x4TruncSatF64x2SZero == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.trunc_sat_f64x2_s_zero");
          props_I32x4TruncSatF64x2SZero = cpb.create();
        }
        return props_I32x4TruncSatF64x2SZero;
      case LanguageConceptSwitch.I64Add:
        if (props_I64Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.add");
          props_I64Add = cpb.create();
        }
        return props_I64Add;
      case LanguageConceptSwitch.I64And:
        if (props_I64And == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.and");
          props_I64And = cpb.create();
        }
        return props_I64And;
      case LanguageConceptSwitch.I64Clz:
        if (props_I64Clz == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.clz");
          props_I64Clz = cpb.create();
        }
        return props_I64Clz;
      case LanguageConceptSwitch.I64Const:
        if (props_I64Const == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.const");
          props_I64Const = cpb.create();
        }
        return props_I64Const;
      case LanguageConceptSwitch.I64Ctz:
        if (props_I64Ctz == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.ctz");
          props_I64Ctz = cpb.create();
        }
        return props_I64Ctz;
      case LanguageConceptSwitch.I64DivS:
        if (props_I64DivS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.div_s");
          props_I64DivS = cpb.create();
        }
        return props_I64DivS;
      case LanguageConceptSwitch.I64DivU:
        if (props_I64DivU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.div_u");
          props_I64DivU = cpb.create();
        }
        return props_I64DivU;
      case LanguageConceptSwitch.I64Eq:
        if (props_I64Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.eq");
          props_I64Eq = cpb.create();
        }
        return props_I64Eq;
      case LanguageConceptSwitch.I64Eqz:
        if (props_I64Eqz == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.eqz");
          props_I64Eqz = cpb.create();
        }
        return props_I64Eqz;
      case LanguageConceptSwitch.I64Extend16S:
        if (props_I64Extend16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.extend16_s");
          props_I64Extend16S = cpb.create();
        }
        return props_I64Extend16S;
      case LanguageConceptSwitch.I64Extend32S:
        if (props_I64Extend32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.extend32_s");
          props_I64Extend32S = cpb.create();
        }
        return props_I64Extend32S;
      case LanguageConceptSwitch.I64Extend8S:
        if (props_I64Extend8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.extend8_s");
          props_I64Extend8S = cpb.create();
        }
        return props_I64Extend8S;
      case LanguageConceptSwitch.I64ExtendI32S:
        if (props_I64ExtendI32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.extend_i32_s");
          props_I64ExtendI32S = cpb.create();
        }
        return props_I64ExtendI32S;
      case LanguageConceptSwitch.I64ExtendI32U:
        if (props_I64ExtendI32U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.extend_i32_u");
          props_I64ExtendI32U = cpb.create();
        }
        return props_I64ExtendI32U;
      case LanguageConceptSwitch.I64GeS:
        if (props_I64GeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.ge_s");
          props_I64GeS = cpb.create();
        }
        return props_I64GeS;
      case LanguageConceptSwitch.I64GeU:
        if (props_I64GeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.ge_u");
          props_I64GeU = cpb.create();
        }
        return props_I64GeU;
      case LanguageConceptSwitch.I64GtS:
        if (props_I64GtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.gt_s");
          props_I64GtS = cpb.create();
        }
        return props_I64GtS;
      case LanguageConceptSwitch.I64GtU:
        if (props_I64GtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.gt_u");
          props_I64GtU = cpb.create();
        }
        return props_I64GtU;
      case LanguageConceptSwitch.I64LeS:
        if (props_I64LeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.le_s");
          props_I64LeS = cpb.create();
        }
        return props_I64LeS;
      case LanguageConceptSwitch.I64LeU:
        if (props_I64LeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.le_u");
          props_I64LeU = cpb.create();
        }
        return props_I64LeU;
      case LanguageConceptSwitch.I64Load:
        if (props_I64Load == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.load");
          props_I64Load = cpb.create();
        }
        return props_I64Load;
      case LanguageConceptSwitch.I64Load16S:
        if (props_I64Load16S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.load16_s");
          props_I64Load16S = cpb.create();
        }
        return props_I64Load16S;
      case LanguageConceptSwitch.I64Load16U:
        if (props_I64Load16U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.load16_u");
          props_I64Load16U = cpb.create();
        }
        return props_I64Load16U;
      case LanguageConceptSwitch.I64Load32S:
        if (props_I64Load32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.load32_s");
          props_I64Load32S = cpb.create();
        }
        return props_I64Load32S;
      case LanguageConceptSwitch.I64Load32U:
        if (props_I64Load32U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.load32_u");
          props_I64Load32U = cpb.create();
        }
        return props_I64Load32U;
      case LanguageConceptSwitch.I64Load8S:
        if (props_I64Load8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.load8_s");
          props_I64Load8S = cpb.create();
        }
        return props_I64Load8S;
      case LanguageConceptSwitch.I64Load8U:
        if (props_I64Load8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.load8_u");
          props_I64Load8U = cpb.create();
        }
        return props_I64Load8U;
      case LanguageConceptSwitch.I64LtS:
        if (props_I64LtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.lt_s");
          props_I64LtS = cpb.create();
        }
        return props_I64LtS;
      case LanguageConceptSwitch.I64LtU:
        if (props_I64LtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.lt_u");
          props_I64LtU = cpb.create();
        }
        return props_I64LtU;
      case LanguageConceptSwitch.I64Mul:
        if (props_I64Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.mul");
          props_I64Mul = cpb.create();
        }
        return props_I64Mul;
      case LanguageConceptSwitch.I64Ne:
        if (props_I64Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.ne");
          props_I64Ne = cpb.create();
        }
        return props_I64Ne;
      case LanguageConceptSwitch.I64Or:
        if (props_I64Or == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.or");
          props_I64Or = cpb.create();
        }
        return props_I64Or;
      case LanguageConceptSwitch.I64Popcnt:
        if (props_I64Popcnt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.popcnt");
          props_I64Popcnt = cpb.create();
        }
        return props_I64Popcnt;
      case LanguageConceptSwitch.I64ReinterpretF64:
        if (props_I64ReinterpretF64 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.reinterpret_f64");
          props_I64ReinterpretF64 = cpb.create();
        }
        return props_I64ReinterpretF64;
      case LanguageConceptSwitch.I64RemS:
        if (props_I64RemS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.rem_s");
          props_I64RemS = cpb.create();
        }
        return props_I64RemS;
      case LanguageConceptSwitch.I64RemU:
        if (props_I64RemU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.rem_u");
          props_I64RemU = cpb.create();
        }
        return props_I64RemU;
      case LanguageConceptSwitch.I64Rotl:
        if (props_I64Rotl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.rotl");
          props_I64Rotl = cpb.create();
        }
        return props_I64Rotl;
      case LanguageConceptSwitch.I64Rotr:
        if (props_I64Rotr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.rotr");
          props_I64Rotr = cpb.create();
        }
        return props_I64Rotr;
      case LanguageConceptSwitch.I64Shl:
        if (props_I64Shl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.shl");
          props_I64Shl = cpb.create();
        }
        return props_I64Shl;
      case LanguageConceptSwitch.I64ShrS:
        if (props_I64ShrS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.shr_s");
          props_I64ShrS = cpb.create();
        }
        return props_I64ShrS;
      case LanguageConceptSwitch.I64ShrU:
        if (props_I64ShrU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.shr_u");
          props_I64ShrU = cpb.create();
        }
        return props_I64ShrU;
      case LanguageConceptSwitch.I64Store:
        if (props_I64Store == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.store");
          props_I64Store = cpb.create();
        }
        return props_I64Store;
      case LanguageConceptSwitch.I64Store16:
        if (props_I64Store16 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.store16");
          props_I64Store16 = cpb.create();
        }
        return props_I64Store16;
      case LanguageConceptSwitch.I64Store32:
        if (props_I64Store32 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.store32");
          props_I64Store32 = cpb.create();
        }
        return props_I64Store32;
      case LanguageConceptSwitch.I64Store8:
        if (props_I64Store8 == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.store8");
          props_I64Store8 = cpb.create();
        }
        return props_I64Store8;
      case LanguageConceptSwitch.I64Sub:
        if (props_I64Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.sub");
          props_I64Sub = cpb.create();
        }
        return props_I64Sub;
      case LanguageConceptSwitch.I64TruncF32S:
        if (props_I64TruncF32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.trunc_f32_s");
          props_I64TruncF32S = cpb.create();
        }
        return props_I64TruncF32S;
      case LanguageConceptSwitch.I64TruncF32U:
        if (props_I64TruncF32U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.trunc_f32_u");
          props_I64TruncF32U = cpb.create();
        }
        return props_I64TruncF32U;
      case LanguageConceptSwitch.I64TruncF64S:
        if (props_I64TruncF64S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.trunc_f64_s");
          props_I64TruncF64S = cpb.create();
        }
        return props_I64TruncF64S;
      case LanguageConceptSwitch.I64TruncF64U:
        if (props_I64TruncF64U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.trunc_f64_u");
          props_I64TruncF64U = cpb.create();
        }
        return props_I64TruncF64U;
      case LanguageConceptSwitch.I64TruncSatF32S:
        if (props_I64TruncSatF32S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.trunc_sat_f32_s");
          props_I64TruncSatF32S = cpb.create();
        }
        return props_I64TruncSatF32S;
      case LanguageConceptSwitch.I64TruncSatF32U:
        if (props_I64TruncSatF32U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.trunc_sat_f32_u");
          props_I64TruncSatF32U = cpb.create();
        }
        return props_I64TruncSatF32U;
      case LanguageConceptSwitch.I64TruncSatF64S:
        if (props_I64TruncSatF64S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.trunc_sat_f64_s");
          props_I64TruncSatF64S = cpb.create();
        }
        return props_I64TruncSatF64S;
      case LanguageConceptSwitch.I64TruncSatF64U:
        if (props_I64TruncSatF64U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.trunc_sat_f64_u");
          props_I64TruncSatF64U = cpb.create();
        }
        return props_I64TruncSatF64U;
      case LanguageConceptSwitch.I64Xor:
        if (props_I64Xor == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64.xor");
          props_I64Xor = cpb.create();
        }
        return props_I64Xor;
      case LanguageConceptSwitch.I64x2Abs:
        if (props_I64x2Abs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.abs");
          props_I64x2Abs = cpb.create();
        }
        return props_I64x2Abs;
      case LanguageConceptSwitch.I64x2Add:
        if (props_I64x2Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.add");
          props_I64x2Add = cpb.create();
        }
        return props_I64x2Add;
      case LanguageConceptSwitch.I64x2AllTrue:
        if (props_I64x2AllTrue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.all_true");
          props_I64x2AllTrue = cpb.create();
        }
        return props_I64x2AllTrue;
      case LanguageConceptSwitch.I64x2Bitmask:
        if (props_I64x2Bitmask == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.bitmask");
          props_I64x2Bitmask = cpb.create();
        }
        return props_I64x2Bitmask;
      case LanguageConceptSwitch.I64x2Eq:
        if (props_I64x2Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.eq");
          props_I64x2Eq = cpb.create();
        }
        return props_I64x2Eq;
      case LanguageConceptSwitch.I64x2ExtendHighI32x4S:
        if (props_I64x2ExtendHighI32x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extend_high_i32x4_s");
          props_I64x2ExtendHighI32x4S = cpb.create();
        }
        return props_I64x2ExtendHighI32x4S;
      case LanguageConceptSwitch.I64x2ExtendHighI32x4U:
        if (props_I64x2ExtendHighI32x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extend_high_i32x4_u");
          props_I64x2ExtendHighI32x4U = cpb.create();
        }
        return props_I64x2ExtendHighI32x4U;
      case LanguageConceptSwitch.I64x2ExtendLowI32x4S:
        if (props_I64x2ExtendLowI32x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extend_low_i32x4_s");
          props_I64x2ExtendLowI32x4S = cpb.create();
        }
        return props_I64x2ExtendLowI32x4S;
      case LanguageConceptSwitch.I64x2ExtendLowI32x4U:
        if (props_I64x2ExtendLowI32x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extend_low_i32x4_u");
          props_I64x2ExtendLowI32x4U = cpb.create();
        }
        return props_I64x2ExtendLowI32x4U;
      case LanguageConceptSwitch.I64x2ExtmulHighI32x4S:
        if (props_I64x2ExtmulHighI32x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extmul_high_i32x4_s");
          props_I64x2ExtmulHighI32x4S = cpb.create();
        }
        return props_I64x2ExtmulHighI32x4S;
      case LanguageConceptSwitch.I64x2ExtmulHighI32x4U:
        if (props_I64x2ExtmulHighI32x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extmul_high_i32x4_u");
          props_I64x2ExtmulHighI32x4U = cpb.create();
        }
        return props_I64x2ExtmulHighI32x4U;
      case LanguageConceptSwitch.I64x2ExtmulLowI32x4S:
        if (props_I64x2ExtmulLowI32x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extmul_low_i32x4_s");
          props_I64x2ExtmulLowI32x4S = cpb.create();
        }
        return props_I64x2ExtmulLowI32x4S;
      case LanguageConceptSwitch.I64x2ExtmulLowI32x4U:
        if (props_I64x2ExtmulLowI32x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extmul_low_i32x4_u");
          props_I64x2ExtmulLowI32x4U = cpb.create();
        }
        return props_I64x2ExtmulLowI32x4U;
      case LanguageConceptSwitch.I64x2ExtractLane:
        if (props_I64x2ExtractLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.extract_lane");
          props_I64x2ExtractLane = cpb.create();
        }
        return props_I64x2ExtractLane;
      case LanguageConceptSwitch.I64x2GeS:
        if (props_I64x2GeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.ge_s");
          props_I64x2GeS = cpb.create();
        }
        return props_I64x2GeS;
      case LanguageConceptSwitch.I64x2GtS:
        if (props_I64x2GtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.gt_s");
          props_I64x2GtS = cpb.create();
        }
        return props_I64x2GtS;
      case LanguageConceptSwitch.I64x2LeS:
        if (props_I64x2LeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.le_s");
          props_I64x2LeS = cpb.create();
        }
        return props_I64x2LeS;
      case LanguageConceptSwitch.I64x2LtS:
        if (props_I64x2LtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.lt_s");
          props_I64x2LtS = cpb.create();
        }
        return props_I64x2LtS;
      case LanguageConceptSwitch.I64x2Mul:
        if (props_I64x2Mul == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.mul");
          props_I64x2Mul = cpb.create();
        }
        return props_I64x2Mul;
      case LanguageConceptSwitch.I64x2Ne:
        if (props_I64x2Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.ne");
          props_I64x2Ne = cpb.create();
        }
        return props_I64x2Ne;
      case LanguageConceptSwitch.I64x2Neg:
        if (props_I64x2Neg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.neg");
          props_I64x2Neg = cpb.create();
        }
        return props_I64x2Neg;
      case LanguageConceptSwitch.I64x2ReplaceLane:
        if (props_I64x2ReplaceLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.replace_lane");
          props_I64x2ReplaceLane = cpb.create();
        }
        return props_I64x2ReplaceLane;
      case LanguageConceptSwitch.I64x2Shl:
        if (props_I64x2Shl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.shl");
          props_I64x2Shl = cpb.create();
        }
        return props_I64x2Shl;
      case LanguageConceptSwitch.I64x2ShrS:
        if (props_I64x2ShrS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.shr_s");
          props_I64x2ShrS = cpb.create();
        }
        return props_I64x2ShrS;
      case LanguageConceptSwitch.I64x2ShrU:
        if (props_I64x2ShrU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.shr_u");
          props_I64x2ShrU = cpb.create();
        }
        return props_I64x2ShrU;
      case LanguageConceptSwitch.I64x2Splat:
        if (props_I64x2Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.splat");
          props_I64x2Splat = cpb.create();
        }
        return props_I64x2Splat;
      case LanguageConceptSwitch.I64x2Sub:
        if (props_I64x2Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i64x2.sub");
          props_I64x2Sub = cpb.create();
        }
        return props_I64x2Sub;
      case LanguageConceptSwitch.I8x16Abs:
        if (props_I8x16Abs == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.abs");
          props_I8x16Abs = cpb.create();
        }
        return props_I8x16Abs;
      case LanguageConceptSwitch.I8x16Add:
        if (props_I8x16Add == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.add");
          props_I8x16Add = cpb.create();
        }
        return props_I8x16Add;
      case LanguageConceptSwitch.I8x16AddSatS:
        if (props_I8x16AddSatS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.add_sat_s");
          props_I8x16AddSatS = cpb.create();
        }
        return props_I8x16AddSatS;
      case LanguageConceptSwitch.I8x16AddSatU:
        if (props_I8x16AddSatU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.add_sat_u");
          props_I8x16AddSatU = cpb.create();
        }
        return props_I8x16AddSatU;
      case LanguageConceptSwitch.I8x16AllTrue:
        if (props_I8x16AllTrue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.all_true");
          props_I8x16AllTrue = cpb.create();
        }
        return props_I8x16AllTrue;
      case LanguageConceptSwitch.I8x16AvgrU:
        if (props_I8x16AvgrU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.avgr_u");
          props_I8x16AvgrU = cpb.create();
        }
        return props_I8x16AvgrU;
      case LanguageConceptSwitch.I8x16Bitmask:
        if (props_I8x16Bitmask == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.bitmask");
          props_I8x16Bitmask = cpb.create();
        }
        return props_I8x16Bitmask;
      case LanguageConceptSwitch.I8x16Eq:
        if (props_I8x16Eq == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.eq");
          props_I8x16Eq = cpb.create();
        }
        return props_I8x16Eq;
      case LanguageConceptSwitch.I8x16ExtractLaneS:
        if (props_I8x16ExtractLaneS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.extract_lane_s");
          props_I8x16ExtractLaneS = cpb.create();
        }
        return props_I8x16ExtractLaneS;
      case LanguageConceptSwitch.I8x16ExtractLaneU:
        if (props_I8x16ExtractLaneU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.extract_lane_u");
          props_I8x16ExtractLaneU = cpb.create();
        }
        return props_I8x16ExtractLaneU;
      case LanguageConceptSwitch.I8x16GeS:
        if (props_I8x16GeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.ge_s");
          props_I8x16GeS = cpb.create();
        }
        return props_I8x16GeS;
      case LanguageConceptSwitch.I8x16GeU:
        if (props_I8x16GeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.ge_u");
          props_I8x16GeU = cpb.create();
        }
        return props_I8x16GeU;
      case LanguageConceptSwitch.I8x16GtS:
        if (props_I8x16GtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.gt_s");
          props_I8x16GtS = cpb.create();
        }
        return props_I8x16GtS;
      case LanguageConceptSwitch.I8x16GtU:
        if (props_I8x16GtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.gt_u");
          props_I8x16GtU = cpb.create();
        }
        return props_I8x16GtU;
      case LanguageConceptSwitch.I8x16LeS:
        if (props_I8x16LeS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.le_s");
          props_I8x16LeS = cpb.create();
        }
        return props_I8x16LeS;
      case LanguageConceptSwitch.I8x16LeU:
        if (props_I8x16LeU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.le_u");
          props_I8x16LeU = cpb.create();
        }
        return props_I8x16LeU;
      case LanguageConceptSwitch.I8x16LtS:
        if (props_I8x16LtS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.lt_s");
          props_I8x16LtS = cpb.create();
        }
        return props_I8x16LtS;
      case LanguageConceptSwitch.I8x16LtU:
        if (props_I8x16LtU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.lt_u");
          props_I8x16LtU = cpb.create();
        }
        return props_I8x16LtU;
      case LanguageConceptSwitch.I8x16MaxS:
        if (props_I8x16MaxS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.max_s");
          props_I8x16MaxS = cpb.create();
        }
        return props_I8x16MaxS;
      case LanguageConceptSwitch.I8x16MaxU:
        if (props_I8x16MaxU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.max_u");
          props_I8x16MaxU = cpb.create();
        }
        return props_I8x16MaxU;
      case LanguageConceptSwitch.I8x16MinS:
        if (props_I8x16MinS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.min_s");
          props_I8x16MinS = cpb.create();
        }
        return props_I8x16MinS;
      case LanguageConceptSwitch.I8x16MinU:
        if (props_I8x16MinU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.min_u");
          props_I8x16MinU = cpb.create();
        }
        return props_I8x16MinU;
      case LanguageConceptSwitch.I8x16NarrowI16x8S:
        if (props_I8x16NarrowI16x8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.narrow_i16x8_s");
          props_I8x16NarrowI16x8S = cpb.create();
        }
        return props_I8x16NarrowI16x8S;
      case LanguageConceptSwitch.I8x16NarrowI16x8U:
        if (props_I8x16NarrowI16x8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.narrow_i16x8_u");
          props_I8x16NarrowI16x8U = cpb.create();
        }
        return props_I8x16NarrowI16x8U;
      case LanguageConceptSwitch.I8x16Ne:
        if (props_I8x16Ne == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.ne");
          props_I8x16Ne = cpb.create();
        }
        return props_I8x16Ne;
      case LanguageConceptSwitch.I8x16Neg:
        if (props_I8x16Neg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.neg");
          props_I8x16Neg = cpb.create();
        }
        return props_I8x16Neg;
      case LanguageConceptSwitch.I8x16Popcnt:
        if (props_I8x16Popcnt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.popcnt");
          props_I8x16Popcnt = cpb.create();
        }
        return props_I8x16Popcnt;
      case LanguageConceptSwitch.I8x16ReplaceLane:
        if (props_I8x16ReplaceLane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.replace_lane");
          props_I8x16ReplaceLane = cpb.create();
        }
        return props_I8x16ReplaceLane;
      case LanguageConceptSwitch.I8x16Shl:
        if (props_I8x16Shl == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.shl");
          props_I8x16Shl = cpb.create();
        }
        return props_I8x16Shl;
      case LanguageConceptSwitch.I8x16ShrS:
        if (props_I8x16ShrS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.shr_s");
          props_I8x16ShrS = cpb.create();
        }
        return props_I8x16ShrS;
      case LanguageConceptSwitch.I8x16ShrU:
        if (props_I8x16ShrU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.shr_u");
          props_I8x16ShrU = cpb.create();
        }
        return props_I8x16ShrU;
      case LanguageConceptSwitch.I8x16Shuffle:
        if (props_I8x16Shuffle == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.shuffle");
          props_I8x16Shuffle = cpb.create();
        }
        return props_I8x16Shuffle;
      case LanguageConceptSwitch.I8x16Splat:
        if (props_I8x16Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.splat");
          props_I8x16Splat = cpb.create();
        }
        return props_I8x16Splat;
      case LanguageConceptSwitch.I8x16Sub:
        if (props_I8x16Sub == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.sub");
          props_I8x16Sub = cpb.create();
        }
        return props_I8x16Sub;
      case LanguageConceptSwitch.I8x16SubSatS:
        if (props_I8x16SubSatS == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.sub_sat_s");
          props_I8x16SubSatS = cpb.create();
        }
        return props_I8x16SubSatS;
      case LanguageConceptSwitch.I8x16SubSatU:
        if (props_I8x16SubSatU == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.sub_sat_u");
          props_I8x16SubSatU = cpb.create();
        }
        return props_I8x16SubSatU;
      case LanguageConceptSwitch.I8x16Swizzle:
        if (props_I8x16Swizzle == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i8x16.swizzle");
          props_I8x16Swizzle = cpb.create();
        }
        return props_I8x16Swizzle;
      case LanguageConceptSwitch.If:
        if (props_If == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("if");
          props_If = cpb.create();
        }
        return props_If;
      case LanguageConceptSwitch.IfElse:
        if (props_IfElse == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ifelse");
          props_IfElse = cpb.create();
        }
        return props_IfElse;
      case LanguageConceptSwitch.Import:
        if (props_Import == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("import");
          props_Import = cpb.create();
        }
        return props_Import;
      case LanguageConceptSwitch.ImportDesc:
        if (props_ImportDesc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ImportDesc = cpb.create();
        }
        return props_ImportDesc;
      case LanguageConceptSwitch.ImportGlobalTypeDesc:
        if (props_ImportGlobalTypeDesc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("globaltype");
          props_ImportGlobalTypeDesc = cpb.create();
        }
        return props_ImportGlobalTypeDesc;
      case LanguageConceptSwitch.ImportMemTypeDesc:
        if (props_ImportMemTypeDesc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("memtype");
          props_ImportMemTypeDesc = cpb.create();
        }
        return props_ImportMemTypeDesc;
      case LanguageConceptSwitch.ImportSection:
        if (props_ImportSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("imports");
          props_ImportSection = cpb.create();
        }
        return props_ImportSection;
      case LanguageConceptSwitch.ImportTableTypeDesc:
        if (props_ImportTableTypeDesc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("tabletype");
          props_ImportTableTypeDesc = cpb.create();
        }
        return props_ImportTableTypeDesc;
      case LanguageConceptSwitch.ImportTypeIdxDesc:
        if (props_ImportTypeIdxDesc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("typeidx");
          props_ImportTypeIdxDesc = cpb.create();
        }
        return props_ImportTypeIdxDesc;
      case LanguageConceptSwitch.Index:
        if (props_Index == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Index = cpb.create();
        }
        return props_Index;
      case LanguageConceptSwitch.Instr:
        if (props_Instr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Instr = cpb.create();
        }
        return props_Instr;
      case LanguageConceptSwitch.LabelIdx:
        if (props_LabelIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("labelidx");
          props_LabelIdx = cpb.create();
        }
        return props_LabelIdx;
      case LanguageConceptSwitch.LaneIdx:
        if (props_LaneIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("laneidx");
          props_LaneIdx = cpb.create();
        }
        return props_LaneIdx;
      case LanguageConceptSwitch.Limits:
        if (props_Limits == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("limits");
          props_Limits = cpb.create();
        }
        return props_Limits;
      case LanguageConceptSwitch.LocalGet:
        if (props_LocalGet == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("local.get");
          props_LocalGet = cpb.create();
        }
        return props_LocalGet;
      case LanguageConceptSwitch.LocalIdx:
        if (props_LocalIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("localidx");
          props_LocalIdx = cpb.create();
        }
        return props_LocalIdx;
      case LanguageConceptSwitch.LocalSet:
        if (props_LocalSet == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("local.set");
          props_LocalSet = cpb.create();
        }
        return props_LocalSet;
      case LanguageConceptSwitch.LocalTee:
        if (props_LocalTee == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("local.tee");
          props_LocalTee = cpb.create();
        }
        return props_LocalTee;
      case LanguageConceptSwitch.Locals:
        if (props_Locals == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("locals");
          props_Locals = cpb.create();
        }
        return props_Locals;
      case LanguageConceptSwitch.Loop:
        if (props_Loop == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("loop");
          props_Loop = cpb.create();
        }
        return props_Loop;
      case LanguageConceptSwitch.Mem:
        if (props_Mem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("mem");
          props_Mem = cpb.create();
        }
        return props_Mem;
      case LanguageConceptSwitch.MemArg:
        if (props_MemArg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("memarg");
          props_MemArg = cpb.create();
        }
        return props_MemArg;
      case LanguageConceptSwitch.MemExport:
        if (props_MemExport == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("mem");
          props_MemExport = cpb.create();
        }
        return props_MemExport;
      case LanguageConceptSwitch.MemIdx:
        if (props_MemIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("MemIdx");
          props_MemIdx = cpb.create();
        }
        return props_MemIdx;
      case LanguageConceptSwitch.MemSection:
        if (props_MemSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("mems");
          props_MemSection = cpb.create();
        }
        return props_MemSection;
      case LanguageConceptSwitch.MemType:
        if (props_MemType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("memtype");
          props_MemType = cpb.create();
        }
        return props_MemType;
      case LanguageConceptSwitch.MemoryCopy:
        if (props_MemoryCopy == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("memory.copy");
          props_MemoryCopy = cpb.create();
        }
        return props_MemoryCopy;
      case LanguageConceptSwitch.MemoryFill:
        if (props_MemoryFill == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("memory.fill");
          props_MemoryFill = cpb.create();
        }
        return props_MemoryFill;
      case LanguageConceptSwitch.MemoryGrow:
        if (props_MemoryGrow == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("memory.grow");
          props_MemoryGrow = cpb.create();
        }
        return props_MemoryGrow;
      case LanguageConceptSwitch.MemoryInit:
        if (props_MemoryInit == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("memory.init");
          props_MemoryInit = cpb.create();
        }
        return props_MemoryInit;
      case LanguageConceptSwitch.MemorySize:
        if (props_MemorySize == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("memory.size");
          props_MemorySize = cpb.create();
        }
        return props_MemorySize;
      case LanguageConceptSwitch.Module:
        if (props_Module == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Module = cpb.create();
        }
        return props_Module;
      case LanguageConceptSwitch.ModuleSection:
        if (props_ModuleSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ModuleSection = cpb.create();
        }
        return props_ModuleSection;
      case LanguageConceptSwitch.Nop:
        if (props_Nop == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("nop");
          props_Nop = cpb.create();
        }
        return props_Nop;
      case LanguageConceptSwitch.NumType:
        if (props_NumType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("numtype");
          props_NumType = cpb.create();
        }
        return props_NumType;
      case LanguageConceptSwitch.PassiveData:
        if (props_PassiveData == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("passive");
          props_PassiveData = cpb.create();
        }
        return props_PassiveData;
      case LanguageConceptSwitch.PassiveElem:
        if (props_PassiveElem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("passive");
          props_PassiveElem = cpb.create();
        }
        return props_PassiveElem;
      case LanguageConceptSwitch.PassiveExprsElem:
        if (props_PassiveExprsElem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("active_exprs");
          props_PassiveExprsElem = cpb.create();
        }
        return props_PassiveExprsElem;
      case LanguageConceptSwitch.PlainVectorInstr:
        if (props_PlainVectorInstr == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_PlainVectorInstr = cpb.create();
        }
        return props_PlainVectorInstr;
      case LanguageConceptSwitch.RefFunc:
        if (props_RefFunc == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ref.func");
          props_RefFunc = cpb.create();
        }
        return props_RefFunc;
      case LanguageConceptSwitch.RefIsNull:
        if (props_RefIsNull == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ref.is_null");
          props_RefIsNull = cpb.create();
        }
        return props_RefIsNull;
      case LanguageConceptSwitch.RefNull:
        if (props_RefNull == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ref.null");
          props_RefNull = cpb.create();
        }
        return props_RefNull;
      case LanguageConceptSwitch.RefType:
        if (props_RefType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("reftype");
          props_RefType = cpb.create();
        }
        return props_RefType;
      case LanguageConceptSwitch.ResultType:
        if (props_ResultType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("resulttype");
          props_ResultType = cpb.create();
        }
        return props_ResultType;
      case LanguageConceptSwitch.Return:
        if (props_Return == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("return");
          props_Return = cpb.create();
        }
        return props_Return;
      case LanguageConceptSwitch.Select:
        if (props_Select == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("select");
          props_Select = cpb.create();
        }
        return props_Select;
      case LanguageConceptSwitch.SelectTypes:
        if (props_SelectTypes == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("select");
          props_SelectTypes = cpb.create();
        }
        return props_SelectTypes;
      case LanguageConceptSwitch.StartSection:
        if (props_StartSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("start");
          props_StartSection = cpb.create();
        }
        return props_StartSection;
      case LanguageConceptSwitch.Table:
        if (props_Table == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table");
          props_Table = cpb.create();
        }
        return props_Table;
      case LanguageConceptSwitch.TableCopy:
        if (props_TableCopy == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table.init");
          props_TableCopy = cpb.create();
        }
        return props_TableCopy;
      case LanguageConceptSwitch.TableExport:
        if (props_TableExport == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table");
          props_TableExport = cpb.create();
        }
        return props_TableExport;
      case LanguageConceptSwitch.TableFill:
        if (props_TableFill == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table.fill");
          props_TableFill = cpb.create();
        }
        return props_TableFill;
      case LanguageConceptSwitch.TableGet:
        if (props_TableGet == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table.get");
          props_TableGet = cpb.create();
        }
        return props_TableGet;
      case LanguageConceptSwitch.TableGrow:
        if (props_TableGrow == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table.grow");
          props_TableGrow = cpb.create();
        }
        return props_TableGrow;
      case LanguageConceptSwitch.TableIdx:
        if (props_TableIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("tableidx");
          props_TableIdx = cpb.create();
        }
        return props_TableIdx;
      case LanguageConceptSwitch.TableInit:
        if (props_TableInit == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table.init");
          props_TableInit = cpb.create();
        }
        return props_TableInit;
      case LanguageConceptSwitch.TableSection:
        if (props_TableSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("tables");
          props_TableSection = cpb.create();
        }
        return props_TableSection;
      case LanguageConceptSwitch.TableSet:
        if (props_TableSet == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table.set");
          props_TableSet = cpb.create();
        }
        return props_TableSet;
      case LanguageConceptSwitch.TableSize:
        if (props_TableSize == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("table.size");
          props_TableSize = cpb.create();
        }
        return props_TableSize;
      case LanguageConceptSwitch.TableType:
        if (props_TableType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("tabletype");
          props_TableType = cpb.create();
        }
        return props_TableType;
      case LanguageConceptSwitch.TypeIdx:
        if (props_TypeIdx == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("typeidx");
          props_TypeIdx = cpb.create();
        }
        return props_TypeIdx;
      case LanguageConceptSwitch.TypeIdxBlockType:
        if (props_TypeIdxBlockType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("typeidx");
          props_TypeIdxBlockType = cpb.create();
        }
        return props_TypeIdxBlockType;
      case LanguageConceptSwitch.TypeSection:
        if (props_TypeSection == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("types");
          props_TypeSection = cpb.create();
        }
        return props_TypeSection;
      case LanguageConceptSwitch.U32Val:
        if (props_U32Val == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("u32val");
          props_U32Val = cpb.create();
        }
        return props_U32Val;
      case LanguageConceptSwitch.Unreachable:
        if (props_Unreachable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("unreachable");
          props_Unreachable = cpb.create();
        }
        return props_Unreachable;
      case LanguageConceptSwitch.V128And:
        if (props_V128And == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.and");
          props_V128And = cpb.create();
        }
        return props_V128And;
      case LanguageConceptSwitch.V128AndNot:
        if (props_V128AndNot == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.andnot");
          props_V128AndNot = cpb.create();
        }
        return props_V128AndNot;
      case LanguageConceptSwitch.V128AnyTrue:
        if (props_V128AnyTrue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.any_true");
          props_V128AnyTrue = cpb.create();
        }
        return props_V128AnyTrue;
      case LanguageConceptSwitch.V128Bitselect:
        if (props_V128Bitselect == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.bitselect");
          props_V128Bitselect = cpb.create();
        }
        return props_V128Bitselect;
      case LanguageConceptSwitch.V128Const:
        if (props_V128Const == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.const");
          props_V128Const = cpb.create();
        }
        return props_V128Const;
      case LanguageConceptSwitch.V128Load:
        if (props_V128Load == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load");
          props_V128Load = cpb.create();
        }
        return props_V128Load;
      case LanguageConceptSwitch.V128Load16Lane:
        if (props_V128Load16Lane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load16_lane");
          props_V128Load16Lane = cpb.create();
        }
        return props_V128Load16Lane;
      case LanguageConceptSwitch.V128Load16Splat:
        if (props_V128Load16Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load16_splat");
          props_V128Load16Splat = cpb.create();
        }
        return props_V128Load16Splat;
      case LanguageConceptSwitch.V128Load16x4S:
        if (props_V128Load16x4S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load16x4_s");
          props_V128Load16x4S = cpb.create();
        }
        return props_V128Load16x4S;
      case LanguageConceptSwitch.V128Load16x4U:
        if (props_V128Load16x4U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load16x4_u");
          props_V128Load16x4U = cpb.create();
        }
        return props_V128Load16x4U;
      case LanguageConceptSwitch.V128Load32Lane:
        if (props_V128Load32Lane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load32_lane");
          props_V128Load32Lane = cpb.create();
        }
        return props_V128Load32Lane;
      case LanguageConceptSwitch.V128Load32Splat:
        if (props_V128Load32Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load32_splat");
          props_V128Load32Splat = cpb.create();
        }
        return props_V128Load32Splat;
      case LanguageConceptSwitch.V128Load32Zero:
        if (props_V128Load32Zero == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load32_zero");
          props_V128Load32Zero = cpb.create();
        }
        return props_V128Load32Zero;
      case LanguageConceptSwitch.V128Load32x2S:
        if (props_V128Load32x2S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load32s2_s");
          props_V128Load32x2S = cpb.create();
        }
        return props_V128Load32x2S;
      case LanguageConceptSwitch.V128Load32x2U:
        if (props_V128Load32x2U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load32x2_u");
          props_V128Load32x2U = cpb.create();
        }
        return props_V128Load32x2U;
      case LanguageConceptSwitch.V128Load64Lane:
        if (props_V128Load64Lane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load64_lane");
          props_V128Load64Lane = cpb.create();
        }
        return props_V128Load64Lane;
      case LanguageConceptSwitch.V128Load64Splat:
        if (props_V128Load64Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load64_splat");
          props_V128Load64Splat = cpb.create();
        }
        return props_V128Load64Splat;
      case LanguageConceptSwitch.V128Load64Zero:
        if (props_V128Load64Zero == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load64_zero");
          props_V128Load64Zero = cpb.create();
        }
        return props_V128Load64Zero;
      case LanguageConceptSwitch.V128Load8Lane:
        if (props_V128Load8Lane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("V128Load8Lane");
          props_V128Load8Lane = cpb.create();
        }
        return props_V128Load8Lane;
      case LanguageConceptSwitch.V128Load8Splat:
        if (props_V128Load8Splat == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load8_splat");
          props_V128Load8Splat = cpb.create();
        }
        return props_V128Load8Splat;
      case LanguageConceptSwitch.V128Load8x8S:
        if (props_V128Load8x8S == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load8x8_s");
          props_V128Load8x8S = cpb.create();
        }
        return props_V128Load8x8S;
      case LanguageConceptSwitch.V128Load8x8U:
        if (props_V128Load8x8U == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.load8x8_u");
          props_V128Load8x8U = cpb.create();
        }
        return props_V128Load8x8U;
      case LanguageConceptSwitch.V128Not:
        if (props_V128Not == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.not");
          props_V128Not = cpb.create();
        }
        return props_V128Not;
      case LanguageConceptSwitch.V128Or:
        if (props_V128Or == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.or");
          props_V128Or = cpb.create();
        }
        return props_V128Or;
      case LanguageConceptSwitch.V128Store:
        if (props_V128Store == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.store");
          props_V128Store = cpb.create();
        }
        return props_V128Store;
      case LanguageConceptSwitch.V128Store16Lane:
        if (props_V128Store16Lane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.store16_lane");
          props_V128Store16Lane = cpb.create();
        }
        return props_V128Store16Lane;
      case LanguageConceptSwitch.V128Store32Lane:
        if (props_V128Store32Lane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.store32_lane");
          props_V128Store32Lane = cpb.create();
        }
        return props_V128Store32Lane;
      case LanguageConceptSwitch.V128Store64Lane:
        if (props_V128Store64Lane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.store64_lane");
          props_V128Store64Lane = cpb.create();
        }
        return props_V128Store64Lane;
      case LanguageConceptSwitch.V128Store8Lane:
        if (props_V128Store8Lane == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.store8_lane");
          props_V128Store8Lane = cpb.create();
        }
        return props_V128Store8Lane;
      case LanguageConceptSwitch.V128Xor:
        if (props_V128Xor == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("v128.xor");
          props_V128Xor = cpb.create();
        }
        return props_V128Xor;
      case LanguageConceptSwitch.ValBlockType:
        if (props_ValBlockType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("valtype");
          props_ValBlockType = cpb.create();
        }
        return props_ValBlockType;
      case LanguageConceptSwitch.ValTypeContainer:
        if (props_ValTypeContainer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("valtypecontainer");
          props_ValTypeContainer = cpb.create();
        }
        return props_ValTypeContainer;
      case LanguageConceptSwitch.VecType:
        if (props_VecType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("vectype");
          props_VecType = cpb.create();
        }
        return props_VecType;
      case LanguageConceptSwitch.i32x4TruncSatF64x2UZero:
        if (props_i32x4TruncSatF64x2UZero == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("i32x4.trunc_sat_f64x2_u_zero");
          props_i32x4TruncSatF64x2UZero = cpb.create();
        }
        return props_i32x4TruncSatF64x2UZero;
    }
    return null;
  }
}
